<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:clients="com.components.clients.*"
		 xmlns:products="com.components.products.*"
		 xmlns:controls="com.adobe.flex.extras.controls.*"
		 xmlns:components="com.hillelcoren.components.*"
		 width="1016" height="640" initialize="group1_initializeHandler(event)" creationComplete="group1_creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.components.clients.grillaClientes;
			import com.components.clients.guardarDatosPersonalClientePopup;
			import com.components.clients.popupClienteNameSecondName;
			
			import mx.controls.Alert;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.IFocusManager;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			[Bindable]
			private var xmltarjetas:XMLList;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			import popus.Progress;
			
			import spark.components.TitleWindow;
			[Bindable]
			public var xmlcliente:XMLList;
			
			private var popup:Progress;
			
			
			
			//private var grillaclientes:grillaClientes;
			
			public var secondName:popupClienteNameSecondName;
			
			protected function mskdocu_enterHandler(event:FlexEvent):void
			{
				
				popup=Progress(PopUpManager.createPopUp(this,Progress,true));
				PopUpManager.centerPopUp(popup);
				
				cli.getCustomerDocNumber(int(mskdocu.text));
				
			}
			
			protected function operationFaultGetClient(event:FaultEvent):void
			{
				PopUpManager.removePopUp(popup);
				Alert.show("Error "+event.fault.toString());
				
			}
			
			protected function operationResultGetClient(event:ResultEvent):void
			{
				
				PopUpManager.removePopUp(popup);
				var cliente:XMLList;
				cliente = new XMLList(event.result);
				
				
				
				if(event.result.toString().indexOf("Cliente no encontrado")!=-1)
					Alert.show("CLIENTE NO ENCOTRADO");
				
				
				
				
				txtnombrecliente.text=String(cliente.nombre);
				txtapellidocliente.text=String(cliente.apellido);
				lblnocli.text=cliente.id;
				
				focusManager.setFocus(productscomp.cmbproduct);
				
				
				
				
			}
			
			
			//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			private function transferirFocus(keypress:KeyboardEvent):void{
				if(keypress.keyCode==Keyboard.ENTER){
					
					if(keypress.currentTarget.toString().indexOf("txtapellidocliente")!=-1 && txtapellidocliente.text.length >= 4 && txtnombrecliente.text.length >=4){
						
						popup=Progress(PopUpManager.createPopUp(this,Progress,true));
						PopUpManager.centerPopUp(popup);
						cli.searchClientForNameAndLastName(txtnombrecliente.text.toString(),txtapellidocliente.text.toString());
						
					}else{
						if(keypress.currentTarget.toString().indexOf("txtnombrecliente")!=-1&&txtnombrecliente.text.length>=4){
							txtapellidocliente.setFocus();
							
						}	
					}
					if(cmbTarjetasCreditoDebito.text.length>0){
						txtnumerocuponpago.setFocus();
					}
					
				}
				
				
			}
			
			protected function operationFaultSearchClient(event:FaultEvent):void
			{
				PopUpManager.removePopUp(popup);
				Alert.show("Error en el Servidor, verifique!!!");	
				
			}
			
			protected function operationResultSearchClient(event:ResultEvent):void
			{
				PopUpManager.removePopUp(popup);
				
				
				xmlcliente =new XMLList(event.result);
				
				//**************************************************popupWindows++++++++++++++++++++++++++++++++++
				
				displayPopup();		
				
				
				//***********************************************************************************************
				
				
			}
			//***********************************************************************
			public function displayPopup():void{
				var pop1:popupClienteNameSecondName=popupClienteNameSecondName(PopUpManager.createPopUp(this,popupClienteNameSecondName,true));
				
				/*+Set TitleWindows properties+*/
				pop1.title="Seleccione un Registro";
				pop1.showCloseButton=true;
				
				/*Set properties to custom component popup*/
				pop1.targetCodeCustomer=lblnocli;
				pop1.targetName=txtnombrecliente;
				pop1.targetNumCustomer=mskdocu;
				pop1.targetSecondName=txtapellidocliente;
				pop1.clidata=xmlcli;
				PopUpManager.centerPopUp(pop1);
				
				
				
				
			}
			//***********************************************************************
			public function windows_Popup_close(evt:CloseEvent):void{
				PopUpManager.removePopUp(evt.currentTarget as IFlexDisplayObject);
				
			}
			
			protected function btninserclient_clickHandler(event:MouseEvent):void
			{
				displayPopupCustomerPersonalData();
			}
			public function displayPopupCustomerPersonalData():void{
				var popup2:guardarDatosPersonalClientePopup=guardarDatosPersonalClientePopup(PopUpManager.createPopUp(this,guardarDatosPersonalClientePopup,true));
				
				popup2.title="Ingrese Datos Personales de Cliente";
				
				popup2.idcliente=lblnocli;
				popup2.nombre=txtnombrecliente;
				popup2.apellido=txtapellidocliente;
				popup2.nrodocu=mskdocu;
				PopUpManager.centerPopUp(popup2);
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			protected function btnCloseClientComponent_clickHandler(event:MouseEvent):void
			{
				this.removeAllElements();	
			}
			//*************************************************************************************++
			
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				mskdocu.setFocus();
				txtapellidocliente.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtnombrecliente.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				cmbTarjetasCreditoDebito.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtnumerocuponpago.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				cmbTarjetasCreditoDebito.selectedItemId=0;
			}
			
			protected function operation1_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				
				xmltarjetas=new XMLList(event.result);
				cmbTarjetasCreditoDebito.dataProvider=tarjetas;
				
			}
			
			protected function operation1_faultHandler(event:FaultEvent):void
			{
				Alert.show("Se produjo un error al querer obtener el listado de tarjetas de crédito y débito!!!");
				
			}
			
			protected function group1_initializeHandler(event:FlexEvent):void
			{
				wstarjetascreditodebito.searchAllTarjetasCreditoDebito();
			}
			
			protected function verificarProductosCargados():void{
				
				if(productscomp.arrayDg.length>0){
					//*******************************************************************
					var b:Boolean=false;
					for(var j:int=0;j<productscomp.arrayDg.length&&!b;j++){
						//controlamos que no haya descuento por producto y total a la vez
						if(productscomp.porc_d>0 && productscomp.arrayDg[j].porc_desc!=0 && productscomp.porc_d!=0){
							Alert.show("Error al procesar los datos, el descuento es Total o por Productos, corrija!!!");
							return;
						}
						//controlamos que los separadores decimales no sean comas
						if(String(productscomp.arrayDg[j].porc_desc).toString().indexOf(",")!=-1||String(productscomp.arrayDg[j].price).toString().indexOf(",")!=-1)
							b=true;
						
					}
					//*******************************************************************
					if(!b)	
						Alert.show("Desea Guardar Nota De Pedido Actual?","Confirmar Operación", Alert.YES | Alert.NO, this, guardarNotaPedido, null, Alert.NO);
					else
						Alert.show("Corrija la grilla de Productos, el separador decimal es el punto y no la coma!!!");
					
				}else
					Alert.show("NO HAY PRODUCTOS LISTADOS!!!");		
				
			}
			//***************************************************************************************************
			protected function chequearNumeroCupon():Boolean{
					if(cmbTarjetasCreditoDebito.selectedItem.id!=0&&txtnumerocuponpago.length==0)
						return true;
					else
						return false;
			
			}
			//***************************************************************************************************
			protected function btnGuardarNota_clickHandler(event:MouseEvent):void
			{
				//*************************Chequeamos que haya un cliente ya seleccionado********************++
					if(xmlcli.length>0&&txtnombrecliente.text.length>0&&txtapellidocliente.text.length>0){
							if(chequearNumeroCupon())
								Alert.show("Falta Ingresar un Número de Cupón");
							else
								verificarProductosCargados();
							
					}else
						Alert.show("Corregir Datos de Cliente!!!");
				//********************************************************************************************
				
				
				
			}
		protected function guardarNotaPedido(evt:CloseEvent):void{
			if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
				
		
		}	
		//****************************************************************************************************
		protected function getDatosXML():void{
			
			if(rdbentregadosi.selected)
				var entregado:int=1;
			else
				var entregado:int=0;
			if(rdbcanceladanotasi.selected)
				 var canceladanota:int=1;
			else
				var canceladanota:int=0;
			if(rdbstockfuturosi.selected)
				var stockfuturo:int=1;
			else
				var stockfuturo:int=0;
			
			if(rdanuladasi.selected)
				var anulada:int=1;
			else
				var anulada:int=0;
			if(rdenfectivosi.selected)
				var enfectivo:int=1;
			else
				var enfectivo:int=0;
			
			var xmlnota:String="<notapedido>\n" +
				"<idnota>0</idnota>\n" +
				"<personas>\n" +
					"<id>"+lblnocli.text+"</id>\n" +
					"<numerodocu>"+mskdocu.text+"</numerodocu>\n" +
				"</personas>\n" +
				"<tarjetacredito>\n" +
					"<id_tarjeta>"+cmbTarjetasCreditoDebito.selectedItem.id+"</id_tarjeta>\n" +
				"</tarjetacredito>\n" +
				"<porcentaje>\n" +
					"<id_porcentaje>1</id_porcentaje>\n" +
				"</porcentaje>\n" +
				"<montototal>"+productscomp.lblTotGral+"</montototal>\n" +
				"<anticipo>"+productscomp.mskanticipo.text+"</anticipo>\n" +
				"<saldo>"+productscomp.lblsaldo.text+"</saldo>\n" +
				"<entregado>"+entregado+"</entregado>\n" +
				"<usuario_expidio_nota>0</usuario_expidio_nota>\n" +
				"<stockfuturo>"+stockfuturo+"</stockfuturo>\n" +
				"<usuario_entregado>0</usuario_entregado>\n" +
				"<anulado>"+anulada+"</anulado>\n" +
				"<usuario_cancelo_nota>0</usuario_cancelo_nota>\n" +
				"<cancelado>"+canceladanota+"</cancelado>\n" +
				"<descuentonota>"+productscomp.lbldescuento+"</descuentonota>\n" +
				"<porc_descuento_total>"+productscomp.porc_desc_total+"</porc_descuento_total>\n" +
				"<porcentajerecargo>"+productscomp.mskrecargo.text+"</porcentajerecargo>\n" +
				"<montototalapagar>"+productscomp.lblTotApagar.text+"</montototalapagar>"+
				"<observaciones>" +this.txtObservacionesNota+"</observaciones>\n" +
				"<pendiente>"+entregado+"</pendiente>\n"
				"<montoiva>0</montoiva>\n"
				"<recargo>"+productscomp.lbltotalconrecargo.text+"</recargo>\n" +
				"<id_usuario_anulado>0</id_usuario_anulado>\n" +
				"<numerodecupon>"+txtnumerocuponpago.text+"</numerodecupon>\n" +
				"<enefectivo>"+enfectivo+"</enefectivo>"+
				"<detallesnotapedido>\n" ;
			
							for(var ii:int=0;ii<productscomp.arrayDg.length;){
								
								if(productscomp.arrayDg[ii].price==0||productscomp.arrayDg[ii].countt==0||productscomp.arrayDg[ii].subtotal==0)
									ii++;
								else{
									xmlnota+="<itemdetallesnota>\n" +
												"<cantidad>"+productscomp.arrayDg[ii].countt+"</cantidad>\n" +
												"<preciocondescuento>"+productscomp.arrayDg[ii].prec_descuento+"</preciocondescuento>\n" +
												"<precio>"+productscomp.arrayDg[ii].price+"</precio>\n" +
												"<subtotal>"+Number(productscomp.arrayDg[ii].subtotal).toFixed(3)+"</subtotal>\n" +
												"<entregado>"+entregado+"</entregado>\n" +
												"<cancelado>"+canceladanota+"</cancelado>\n" +
												"<anulado>"+anulada+"</anulado>\n" +
												"<pendiente>"+entregado+"</pendiente>\n" +
												"<descuento>"+Number(productscomp.arrayDg[ii].porc_desc).toFixed(2)+"</descuento>\n" +
												"<iva>0</iva>\n" +
												"<id_nota>0</id_nota>\n" +
												"<id_producto>"+productscomp.arrayDg[ii].id+"</id_producto>\n" +
												"</itemdetallesnota>" ;
									ii++
								}
								
							}
			
			
			
				 xmlnota+= "</detallesnotapedido>" +
				  "</notapedido>";
		
		
		}	
		//****************************************************************************************************	
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RadioButtonGroup id="GrupoEntregado"/>
		<s:RadioButtonGroup id="stockFuturo"/>
		<s:RadioButtonGroup id="notaCancelada"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:WebService id="wstarjetascreditodebito" wsdl="http://localhost:8080/ServiceTarjetas/TartjetasWs?WSDL" showBusyCursor="true"
					  >
			<s:operation name="searchAllTarjetasCreditoDebito" result="operation1_resultHandler(event)" fault="operation1_faultHandler(event)">
				
			</s:operation>
		</s:WebService>
		<s:WebService wsdl="http://localhost:8080/ServiceClientes/ClientesWs?WSDL"
					  id="cli" showBusyCursor="true">
			<s:operation fault="operationFaultGetClient(event)"
						 result="operationResultGetClient(event)" 
						 name="getCustomerDocNumber">
				
			</s:operation>
			<s:operation fault="operationFaultSearchClient(event)" 
						 result="operationResultSearchClient(event)"
						 name="searchClientForNameAndLastName">
				
			</s:operation>
			
		</s:WebService>
		<s:XMLListCollection id="xmlcli" source="{xmlcliente.item}"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:XMLListCollection id="tarjetas" source="{xmltarjetas.item}"/>
	</fx:Declarations>
	
	
	<s:TextArea id="txtObservacionesNota" x="460" y="137" width="402" height="97" maxChars="32000"/>
	<s:Label x="457" y="124" fontSize="14" fontWeight="bold" text="Observaciones:"/>
	<controls:MaskedTextInput id="txtnumerocuponpago" x="665" y="32" fontSize="14"
							  inputMask="####-####-####-####" maxChars="19" toolTip="Ingrese en Número de Tarjeta de Crédito o Débito del Plástico"/>
	<s:Label x="663" y="16" fontSize="14" fontWeight="bold"
			 text="Número de cupón tarjeta de credito/debito:"/>
	<components:AdvancedAutoComplete id="cmbTarjetasCreditoDebito" x="412" y="31" width="221"
									 fontSize="14" labelField="descripcion"
									 toolTip="Seleccione una Tarjeta de Crédito o Débito si el cliente utiliza esta forma de pago!!!">
	</components:AdvancedAutoComplete>
	<s:Label x="412" y="16" fontSize="14" fontWeight="bold" text="Tarjetas de Crédito / Débito" toolTip="Seleccione si o no para registrar que la nota de pedido fue entregada al Clliente"/>
	<s:Label x="332" y="60" fontSize="14" fontWeight="bold" text="Nota de Pedido Entregada"/>
	<s:Label x="520" y="60" fontSize="14" fontWeight="bold" text="Nota de Pedido Stock Futuro"/>
	<s:VGroup x="522" y="72">
		<s:RadioButton id="rdbstockfuturosi" label="Si" groupName="stockFuturo"/>
		<s:RadioButton id="rdbstockfuturono" label="No" groupName="stockFuturo" selected="true"/>
	</s:VGroup>
	<s:Label x="724" y="58" fontSize="14" fontWeight="bold" text="Nota de Pedido Cancelada"/>
	<s:VGroup x="727" y="71">
		<s:RadioButton id="rdbcanceladanotasi" label="Si" groupName="notaCancelada"/>
		<s:RadioButton id="rdbcanceladanotano" label="No" selected="true" groupName="notaCancelada"/>
	</s:VGroup>
	<s:Button id="btnCloseClientComponent" x="994" y="10" width="16" height="19" icon="assets/icon_close.png" click="btnCloseClientComponent_clickHandler(event)"/>
	<s:Label x="28" y="39" height="15" fontSize="14" fontWeight="bold" text="Documento:"/>
	<controls:MaskedTextInput id="mskdocu" x="116" y="32" enter="mskdocu_enterHandler(event)"
							  fontSize="18" inputMask="########" maxChars="8" restrict="0-9"
							  toolTip="Ingrese Número de Documento!!!"/>
	<s:Label x="52" y="97" fontSize="14" fontWeight="bold" text="Nombre:"/>
	<s:Label x="39" y="66" fontSize="14" fontWeight="bold" text="Cliente N°:"/>
	<s:Label id="lblnocli" x="115" y="60" width="124" fontFamily="Verdana" fontSize="18"
			 fontWeight="bold" verticalAlign="middle"/>
	<s:TextInput id="txtnombrecliente" x="114" y="85" width="188" fontSize="18" maxChars="40"
				 prompt="Ingrese Nombre" restrict="a-z A-Z ñ-Ñ" />
	<s:Label id="lblapellido" x="46" y="128" fontSize="14" fontWeight="bold" text="Apellido:"/>
	<s:TextInput id="txtapellidocliente" x="113" y="118" width="189" fontSize="18" maxChars="40"
				 prompt="Ingrese Apellido" restrict="a-z A-Z ñ-Ñ"/>
	<s:Button id="btninserclient" x="289" y="21" label="DatosCliente" toolTip="Muestra una Ventana para Ingresar Datos Personales de un Cliente" click="btninserclient_clickHandler(event)"/>
	<s:Button id="btnGuardarNota" x="893" y="308" label="Guardar Nota"
			  click="btnGuardarNota_clickHandler(event)" enabled="false"/>
	<products:productosPedidosNota id="productscomp" x="4" y="166"/>
	<s:RadioButton id="rdbentregadosi" x="331" y="74" label="Si" groupName="GrupoEntregado"/>
	<s:RadioButton id="rdbentregadorno" x="331" y="92" label="No" groupName="GrupoEntregado"
				   selected="true"/>
	<s:Label x="912" y="59" fontSize="14" fontWeight="bold" text="Nota Anulada"/>
	<s:RadioButton x="916" y="72" label="Si" id="rdanuladasi"/>
	<s:RadioButton x="916" y="90" label="No" id="rdanuladano" selected="true"/>
	<s:Label x="885" y="123" fontSize="14" fontWeight="bold" text="Pago Contado"/>
	<s:RadioButton x="906" y="145" label="Si" id="rdenfectivosi" selected="true"/>
	<s:RadioButton x="906" y="163" label="No" id="rdenfectivono"/>
</s:Group>
