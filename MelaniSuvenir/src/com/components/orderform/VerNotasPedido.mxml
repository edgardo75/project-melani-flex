<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:products="com.components.products.*"
		 xmlns:controls="com.adobe.flex.extras.controls.*"
		 xmlns:components="com.hillelcoren.components.*"
		 width="1028" height="616" initialize="group1_initializeHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.actions.CabeceraNota;
			import com.actions.detallesVerNotas;
			import com.components.products.datosProducto;
			
			import flashx.textLayout.formats.WhiteSpaceCollapse;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.AdvancedDataGridEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			
			[Bindable]
			private var anticipo:Number=0;
			
			[Bindable]
			public var dp:Array=[];
			[Bindable]
			public var totGral:Number;
			[Bindable]
			public var totGralDesc:Number;
			[Bindable]
			private var precio_desc:Number;
			[Bindable]
			public var porc_d:Number;
			[Bindable]
			public var porc_desc_total:Number=0;
			[Bindable]
			public var desc_resto:Number=0;
			[Bindable]
			public var tot_recargo:Number=0;
			[Bindable]
			public var temp_tot_porc_desc:Number=0;
			[Bindable]
			private var indexPage:int=0;
			[Bindable]
			private static var SIZEPAGE:int=100;
			[Bindable]
			
			[Bindable]
			private var xmlproduct:XMLList;
			private var totalReg:int=0;
			[Bindable]
			private static var TOTALPAGES:int=0;
			[Bindable]
			private var pageEnum:int=0;
			[Bindable]
			private var xmlNotas:XMLList;
			[Bindable]
			private var detalles:detallesVerNotas;
			
			
			protected function operation1_resultHandler(event:ResultEvent):void
			{
				totalReg = int(event.result.toString());
				
				if(totalReg==0){
					Alert.show("NO HAY NOTAS CARGADAS AÃšN!!!");
				}else{
					
					if(totalReg<100)
						wsnotas.selectAllNotas();
					else{
						last_btn.enabled=true;
						next_btn.enabled=true;
						first_btn.enabled=true;
						prev_btn.enabled=true;
						TOTALPAGES=int(totalReg/SIZEPAGE);		
						
						wsnotas.verNotasPedidoPaginadas(indexPage,SIZEPAGE);
					}
				
				}
				
			}
			
			protected function operation1_faultHandler(event:FaultEvent):void
			{
				Alert.show("ERROR AL BUSCAR CANTIDAD TOTAL DE NOTAS DE PEDIDO EN BASE DE DATOS");
			}
			
			protected function operation2_resultHandler(event:ResultEvent):void
			{
				
				xmlNotas=new XMLList(event.result);
				
				addgrid();
			}
			
			//----------------------------------------------------------------------------------------------
			private function addgrid():void{
				
				var headerNota:CabeceraNota;
				adgNotas.dataProvider=notas;
				
				
				
				
				
				
				
				
				

				if(detallenotas.length>0)
					detallenotas.removeAll();
				
				/*if(btnExportar.enabled==false)	
					btnExportar.enabled=true;
				if(btnImprimir.enabled==false)
					btnImprimir.enabled=true;
				if(btnRegargarlistado.enabled==true)
					btnRegargarlistado.enabled=false;*/
				
				
				
			}
			//---------------------------------------------------------------------------------
			
			protected function operation2_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function first_clickHandler(event:MouseEvent):void
			{
				if(indexPage==0){
					first_btn.enabled=false;
					prev_btn.enabled=false;
					last_btn.enabled=true;
					next_btn.enabled=true;
				}else{
					indexPage=0;
					wsnotas.verNotasPedidoPaginadas(indexPage,SIZEPAGE);
					first_btn.enabled=false;
					prev_btn.enabled=false;
					last_btn.enabled=true;
					next_btn.enabled=true;
					
					
				}
				
			}
			//-------------------------------------------------------------------------------------
			//-------------------------------------------------------------------------------------
			protected function prev_btn_clickHandler(event:MouseEvent):void
			{
				
				if(indexPage==0)
					first_clickHandler(event);
				else{
					indexPage--;
					if(last_btn.enabled==false){
						last_btn.enabled=true;
						next_btn.enabled=true;
					}
					if(indexPage==0){
						first_btn.enabled=false;
						prev_btn.enabled=false;
						last_btn.enabled=true;
						next_btn.enabled=true;
						
					}
					
					wsnotas.verNotasPedidoPaginadas(indexPage,SIZEPAGE);
					
					
				}
				
			}
			//-------------------------------------------------------------------------------------------
			//-------------------------------------------------------------------------------------------
			protected function next_btn_clickHandler(event:MouseEvent):void
			{
				
				if(indexPage==TOTALPAGES)
					last_clickHandler(event);
				else{
					indexPage++;
					if(first_btn.enabled==false){
						first_btn.enabled=true;
						prev_btn.enabled=true;
					}
					if(indexPage==TOTALPAGES){
						last_btn.enabled=false;
						next_btn.enabled=false;
						first_btn.enabled=true;
						prev_btn.enabled=true;
					}
					
					wsnotas.verNotasPedidoPaginadas(indexPage,SIZEPAGE);
					
				}
				
			}
			//-------------------------------------------------------------------------------------------------------
			//-------------------------------------------------------------------------------------------------------
			protected function last_clickHandler(event:MouseEvent):void
			{
				if(indexPage==TOTALPAGES){
					last_btn.enabled=false;
					next_btn.enabled=false;
					first_btn.enabled=true;
					prev_btn.enabled=true;
				}else{
					indexPage=TOTALPAGES;
					wsnotas.verNotasPedidoPaginadas(indexPage,SIZEPAGE);
					last_btn.enabled=false;
					next_btn.enabled=false;
					first_btn.enabled=true;
					prev_btn.enabled=true;
					
					
				}
				
			}
			//-------------------------------------------------------------------------------------------------------------
			
			protected function operation3_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function operation3_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				//wsnotas.getRecorCountNotas();
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			private function formatDateTime(date:Date):String {
				return dtf.format(date);
			} 
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			
			protected function adgNotas_doubleClickHandler(event:MouseEvent):void
			{
				
				lblnombreyapecli.text=String(notas[adgNotas.selectedIndex].cliente.apellidoynombre);
				txtobservaciones.text=String(notas[adgNotas.selectedIndex].observaciones);
				detallenotas.source=notas[adgNotas.selectedIndex].detallenota.itemdetalle;
				addDetalles();
				
			}
			protected function addDetalles():void{
				//Alert.show(notas[adgNotas.selectedIndex].toString());
				if(detallenotasList.length>0){
					detallenotasList.removeAll();
					
					adglistpedprod.dataProvider.removeItems();
					arrayDg.removeAll();
					arrayDg.refresh();
					
					//----------------------------------------------------------
					totGral=0;
					totGralDesc=0;
					precio_desc=0;
					txtdescuento.text="0.0";
					cmbproduct.text="";
					cmbproduct.setFocus();
					txtpreciop.text="";
					mskcantidad.text="";					
					btnremover.enabled=false;
					lblTotApagar.text="0.000";
					lblTotGral.text="0.000";
					porc_d=0;
					porc_desc_total=0;
					lbldescuento.text="0.000";
					lbltotalconrecargo.text="0.000";
					lblsaldo.text="0.000";
					desc_resto=0;
					tot_recargo=0;
					anticipo=0;
				}
				
			var b:Boolean=false;
			
			
			
			while(dp.length>0){
					dp.pop();
			
			}
			
			
			
		
				for(var i:int=0;i<detallenotas.length;i++){
					
							detalles=new detallesVerNotas();
							detalles.idproduct=detallenotas[i].producto.id;
							detalles.countt=detallenotas[i].cantidad;
							detalles.id=detallenotas[i].producto.id;
							detalles.name=detallenotas[i].producto.descripcion;
							detalles.price=detallenotas[i].precio;
							detalles.porc_desc=detallenotas[i].descuento;
							detalles.prec_descuento=detallenotas[i].preciocondescuento;
							detalles.subtotal=detallenotas[i].subtotal;
							
					if(int(detallenotas[i].descuento)>0&&b==false)
						b=true;
							
							
							
					detallenotasList.addItem(detalles);
					
							
					
					
					dp.push({idproduct:detallenotas[i].producto.id,id:detallenotas[i].producto.id,name:detallenotas[i].producto.descripcion,countt:detallenotas[i].cantidad,price:detallenotas[i].precio,porc_desc:detallenotas[i].descuento,prec_descuento:detallenotas[i].preciocondescuento,subtotal:detallenotas[i].subtotal});
					
					
							
				}
					
				if(b==false)
					txtdescuento.text=notas[adgNotas.selectedIndex].porcentajedesctotal;
				
				
				totGral=notas[adgNotas.selectedIndex].total;
				
				tot_recargo=notas[adgNotas.selectedIndex].porcrecargo;
				totGralDesc=Math.abs(Number(notas[adgNotas.selectedIndex].descuentonota));
				porc_desc_total=notas[adgNotas.selectedIndex].porcentajedesctotal;
				
				mskanticipo.text=notas[adgNotas.selectedIndex].anticipo;
				mskrecargo.text=notas[adgNotas.selectedIndex].porcrecargo;
			
				
				//************************************************************************************+
				//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				
					lblTotGral.text=String(totGral.toFixed(3));
					lbldescuento.text=Number(Number(notas[adgNotas.selectedIndex].descuentonota)).toFixed(3);
					lblTotApagar.text=Number(Number(notas[adgNotas.selectedIndex].montototalapagar)).toFixed(3);
					lblsaldo.text=Number(Number(notas[adgNotas.selectedIndex].saldo)).toFixed(3);
					lbltotalconrecargo.text=Number(Number(notas[adgNotas.selectedIndex].recargototal)).toFixed(3);
			
				
				
				
			
			
			
			
			//----------------------------------------------------------------------------------------------------------
				//**************************************************************************************
				
				detallenotasList.refresh();
				arrayDg.refresh();
				
				arrayDg.source=dp;
				
				adglistpedprod.dataProvider=arrayDg;
				
				
				
			
				
				
			
				
			
			
			}
			
			
			//------------------------------------------------------------------------------------------------
			protected function itemEditEndHandler(event:AdvancedDataGridEvent):void
			{
				// get a reference to the datagrid
				var grid:AdvancedDataGrid = event.target as AdvancedDataGrid;
				// get a reference to the name of the property in the
				// underlying object corresponding to the cell that's being edited
				var field:String = event.dataField;
				// get a reference to the row number (the index in the 
				// dataprovider of the row that's being edited)
				var row:Number = Number(event.rowIndex);
				// get a reference to the column number of
				// the cell that's being edited
				var col:int = event.columnIndex;
				var precio_descontado_result_porcentaje:Number=0;
				var precio:Number=0;
				var porcentajedescuento:Number=0;
				var decimal:Number=Math.pow(10,2);
				var temptot:Number=0;
				var tempPrecDesc:Number=0;
				var tempTotDesc:Number=0;
				var tempPorcDes:Number=0;
				
				
				
				
				if (grid != null)
				{
					
					// gets the value (pre-edit) from the grid's dataprovider
					var oldValue:Number = Number(grid.dataProvider.getItemAt(row)[field]);
					// you could also use the following line to get the value
					// directly from the cellrenderer that's showing the value
					// in the datagrid -- it's the same value.
					// That way you wouldn't need a reference to the DataGrid.
					//var oldValue = event.itemRenderer.data[field];
					// get the value (post-edit) from the item editor
					var newValue:Number = Number(grid.itemEditorInstance[grid.columns[col].editorDataField]);
					
					
					
					// check if the value has changed
					if (newValue != oldValue)
					{
						
						
						
						// do actions that should happen when the data changes
						// Note that in this case, the dataprovider
						// hasn't been updated yet, so you can't do any
						// actions that require the dataprovider to have 
						// the new data
						
						if(col==4){
							var priceValue:Number=(grid.selectedItem.price);
							var subtot1:Number=(grid.selectedItem.subtotal);
							
							
							//---------------------------------------------------------------------------------------------------------------------------------------
							if(col==4&&arrayDg.length==1&&newValue==0){
								
								grid.dataProvider.removeItemAt(grid.selectedIndex);
								
								totGral=0;
								totGralDesc=0;
								precio_desc=0;
								txtdescuento.text="0.0";
								
								txtpreciop.text="";
								mskcantidad.text="";					
								btnremover.enabled=false;
								lblTotApagar.text="0.000";
								lblTotGral.text="0.000";
								porc_d=0;
								anticipo=0;
								porc_desc_total=0;		
								lbldescuento.text="0.000";
								lblsaldo.text="0.000";
								lbltotalconrecargo.text="0.000";
								desc_resto=0;
								tot_recargo=0;
								temp_tot_porc_desc=0;
								tempPorcDes=0;
								tempTotDesc=0;
								
								
							}else{
								
								//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
								if(newValue>0){
									
									if(grid.selectedItem.prec_descuento>0){
										var newpricexcountt:Number=grid.selectedItem.countt*Number(Number(newValue).toFixed(3));
										var descitemporc:Number=Number(Number(grid.selectedItem.porc_desc).toFixed(3))*newValue/100;
										
										
										grid.selectedItem.prec_descuento=Number(Number(newValue-descitemporc).toFixed(3));
										
										
										grid.selectedItem.subtotal=Number(Number(newValue-descitemporc)*grid.selectedItem.countt).toFixed(3);
										
									}else
										grid.selectedItem.subtotal=newValue*grid.selectedItem.countt;
									
									
									
									if(arrayDg.length==1){
										totGral=Number(newValue*grid.selectedItem.countt);
										
										
										if(Number(lbldescuento.text)!=0)
											lblTotApagar.text=Number(totGral-totGralDesc).toFixed(3);
									}else{
										temptot=temptot+(newValue*grid.selectedItem.countt);
										
										for(var i:int=0;i<arrayDg.length;i++){
											if(arrayDg[i].idproduct!=grid.selectedItem.idproduct){
												
												if(arrayDg[i].porc_desc>0){
													tempTotDesc=tempTotDesc+Number(Number(arrayDg[i].prec_descuento).toFixed(3));
													tempPorcDes=tempPorcDes+Number(Number(arrayDg[i].porc_desc).toFixed(3));
												}
												if(arrayDg[i].subtotal>0)
													temptot=temptot+(arrayDg[i].price*arrayDg[i].countt);
												
											}
											
										}
										
										
										totGral=temptot;
										
										totGralDesc=0;
										
										totGralDesc=Number(tempTotDesc.toFixed(3))+Number(Number(grid.selectedItem.prec_descuento).toFixed(3));
										
										temp_tot_porc_desc=0;
										
										temp_tot_porc_desc=Number(tempPorcDes.toFixed(3))+Number(Number(grid.selectedItem.porc_desc).toFixed(3));
										
										if(Number(lbldescuento.text)!=0)
											lblTotApagar.text=Number(totGral+Number(lbldescuento.text)).toFixed(3);
									}
									
									
									
								}else{
									if(newValue==0&&grid.selectedIndex>0&&col==4){
										grid.selectedItem.price="0.00";
										grid.selectedItem.subtotal="0.000";
										grid.selectedItem.prec_descuento="0.00";
										grid.selectedItem.porc_desc="0.00";
										var newTotalTemp:Number=0;	
										for(var l:int=0;l<arrayDg.length;l++){
											
											if(arrayDg[l].idproduct!=grid.selectedItem.idproduct){
												
												if(arrayDg[l].porc_desc>0){
													tempTotDesc=tempTotDesc+Number(arrayDg[l].prec_descuento);
													tempPorcDes=tempPorcDes+Number(arrayDg[l].porc_desc);
												}
												if(arrayDg[l].subtotal>0)
													newTotalTemp=newTotalTemp+Number(Number(arrayDg[l].price*arrayDg[l].countt).toFixed(3));
												
											}
										}
										
										totGral=newTotalTemp;
										
										totGralDesc=0;
										
										totGralDesc=Number(tempTotDesc.toFixed(3));
										
										temp_tot_porc_desc=0;
										
										temp_tot_porc_desc=Number(tempPorcDes.toFixed(3));
										
										
										
										
										
									}else{
										
										var newTotalTemp1:Number=0;	
										
										grid.selectedItem.price="0.00";
										grid.selectedItem.subtotal="0.000";
										grid.selectedItem.prec_descuento="0.00";
										grid.selectedItem.porc_desc="0.00";
										
										for(var lm:int=0;lm<arrayDg.length;lm++){
											
											if(arrayDg[lm].idproduct!=grid.selectedItem.idproduct){
												
												if(arrayDg[lm].porc_desc>0){
													tempTotDesc=tempTotDesc+Number(arrayDg[lm].prec_descuento);
													tempPorcDes=tempPorcDes+Number(arrayDg[lm].porc_desc);
												}
												if(arrayDg[lm].subtotal>0)
													newTotalTemp1=newTotalTemp1+Number(Number(arrayDg[lm].price*arrayDg[lm].countt).toFixed(3));
												
											}
										}
										
										totGral=newTotalTemp1;
										
										totGralDesc=0;
										
										totGralDesc=Number(tempTotDesc.toFixed(3));
										
										temp_tot_porc_desc=0;
										
										temp_tot_porc_desc=Number(tempPorcDes.toFixed(3));
										
										
										
										
										
									}
									
									
								}
								//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
							}
							//---------------------------------------------------------------------------------------------------------------------------------
							
						}else{
							if(col==3){
								var cannt:Number=(grid.selectedItem.countt);
								var subtot:Number=(grid.selectedItem.subtotal);
								//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
								if(col==3&&arrayDg.length==1&&newValue==0){
									
									grid.dataProvider.removeItemAt(grid.selectedIndex);
									
									totGral=0;
									totGralDesc=0;
									precio_desc=0;
									txtdescuento.text="0.0";
									
									txtpreciop.text="";
									mskcantidad.text="";					
									btnremover.enabled=false;
									lblTotApagar.text="0.000";
									lblTotGral.text="0.000";
									porc_d=0;
									porc_desc_total=0;		
									lbldescuento.text="0.000";
									lblsaldo.text="0.000";
									lbltotalconrecargo.text="0.000";
									desc_resto=0;
									tot_recargo=0;
									temp_tot_porc_desc=0;
									tempPorcDes=0;
									tempTotDesc=0;
									
									//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++	
								}else{
									
									
									
									if(col==3&&newValue>0){
										var toti:Number=0;	
										if(grid.selectedItem.prec_descuento>0){
											
											
											grid.selectedItem.subtotal=newValue*Number(Number(grid.selectedItem.prec_descuento).toFixed(3));
											
											
											
											
											
										}else{
											
											grid.selectedItem.subtotal=newValue*grid.selectedItem.price;
											
											
										}
										
										toti=toti+Number(Number(grid.selectedItem.price*newValue).toFixed(3));
										
										
										
										if(arrayDg.length==1){
											totGral=Number(grid.selectedItem.price*newValue);
											if(Number(lbldescuento.text)!=0){
												
												lblTotApagar.text=Number(String(totGral-totGralDesc)).toFixed(3);
											}
										}else{
											
											
											
											
											
											
											
											for(var n:int=0;n<arrayDg.length;n++){
												if(arrayDg[n].idproduct!=grid.selectedItem.idproduct){
													
													if(arrayDg[n].subtotal>0)
														toti=toti+Number(Number(arrayDg[n].price*arrayDg[n].countt).toFixed(3));
													
													if(arrayDg[n].porc_desc>0&&arrayDg[n].subtotal>0){
														tempTotDesc=tempTotDesc+Number(arrayDg[n].prec_descuento);
														tempPorcDes=tempPorcDes+Number(arrayDg[n].porc_desc);
														
													}
													
													
												}
											}
											
											
											totGralDesc=0;
											temp_tot_porc_desc=0;
											
											if(grid.selectedItem.prec_descuento>0){
												totGralDesc=Number(tempTotDesc.toFixed(3))+Number(Number(grid.selectedItem.prec_descuento).toFixed(3));
												temp_tot_porc_desc=Number(tempPorcDes.toFixed(3))+Number(Number(grid.selectedItem.porc_desc).toFixed(3));
											}else{
												totGralDesc=Number(tempTotDesc.toFixed(3));
												temp_tot_porc_desc=Number(tempPorcDes.toFixed(3));
											}
											
											
											
											
											
											
											
											totGral=toti;
											
											
											
											
										}
										
										
										
										
										
										
									}else{
										var tottemp:Number=0;
										if(col==3&&newValue==0&&grid.selectedIndex>0){
											
											grid.selectedItem.countt="0";
											grid.selectedItem.subtotal="0.000";
											grid.selectedItem.porc_desc="0.0";
											grid.selectedItem.prec_descuento="0.0";
											
											
											for(var m:int=0;m<arrayDg.length;m++){
												if(arrayDg[m].idproduct!=grid.selectedItem.idproduct){
													
													if(arrayDg[m].porc_desc>0){
														tempTotDesc=tempTotDesc+Number(arrayDg[m].prec_descuento);
														tempPorcDes=tempPorcDes+Number(arrayDg[m].porc_desc);
													}
													if(arrayDg[m].subtotal>0)
														tottemp=tottemp+Number(Number(arrayDg[m].price*arrayDg[m].countt).toFixed(3));
												}
											}
											
											totGral=0;
											
											totGral=tottemp;
											
											totGralDesc=0;
											
											totGralDesc=Number(tempTotDesc.toFixed(3));
											
											temp_tot_porc_desc=0;
											
											temp_tot_porc_desc=Number(tempPorcDes.toFixed(3));
											
											
											
											
										}else{
											if(col==3&&newValue==0&&grid.selectedIndex==0)
												
												grid.selectedItem.countt="0";
											grid.selectedItem.subtotal="0.00";
											grid.selectedItem.porc_desc="0.0";
											grid.selectedItem.prec_descuento="0.0";
											
											
											
											for(var r:int=0;r<arrayDg.length;r++){
												if(arrayDg[r].idproduct!=grid.selectedItem.idproduct){
													
													if(arrayDg[r].porc_desc>0){
														tempTotDesc=tempTotDesc+Number(arrayDg[r].prec_descuento);
														tempPorcDes=tempPorcDes+Number(arrayDg[r].porc_desc);
													}
													if(arrayDg[r].subtotal>0)
														tottemp=tottemp+Number(Number(arrayDg[r].price*arrayDg[r].countt).toFixed(3));
												}
											}
											
											totGral=tottemp;
											
											totGralDesc=0;
											
											totGralDesc=Number(tempTotDesc.toFixed(3));
											
											temp_tot_porc_desc=0;
											
											temp_tot_porc_desc=Number(tempPorcDes.toFixed(3));
											
											
										}
										
										
										
										
									}
								}
								
							}else{
								//-----------------------------------------------------------------------------------------------------------------------------
								if(col==5&&oldValue==0){
									//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
									
									if(txtdescuento.text.length>0)
										txtdescuento.text="0.0";
									//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
									
									
									precio=Number(Number(grid.selectedItem.price));
									porcentajedescuento=newValue;
									
									
									
									grid.selectedItem.prec_descuento=Number(precio-Number(Number(grid.selectedItem.price*(porcentajedescuento/100)))).toFixed(3);
									
									grid.selectedItem.subtotal=grid.selectedItem.prec_descuento*grid.selectedItem.countt;
									
									precio_descontado_result_porcentaje=Number(Number(grid.selectedItem.subtotal*(porcentajedescuento/100)));
									
									
									
									
									
									
									//-------------------------------------------------------------------------------------
									
									
									
									if(arrayDg.length==1){
										totGralDesc=Number(grid.selectedItem.prec_descuento);
										
										
										
									}else{
										
										Alert.show(String(arrayDg.length));
										for(var p:int=0;p<arrayDg.length;p++){
											
											if(arrayDg[p].idproduct!=grid.selectedItem.idproduct){
												
												
												tempTotDesc=tempTotDesc+Number(arrayDg[p].prec_descuento);
												tempPorcDes=tempPorcDes+Number(arrayDg[p].porc_desc);
												
												
												
											}
										}
										
										
										totGralDesc=0;
										
										
										totGralDesc+=Number(tempTotDesc.toFixed(3))+Number(Number(grid.selectedItem.prec_descuento).toFixed(3));
										
										
										temp_tot_porc_desc=0;
										
										temp_tot_porc_desc=Number(tempPorcDes.toFixed(3))+Number(Number(newValue).toFixed(3));
										
										
										
										
										
										
										
									}
									
									
									
									
									
									
									
								}else{
									
									if(col==5&&newValue==0){
										
										grid.selectedItem.subtotal=grid.selectedItem.price*grid.selectedItem.countt;
										grid.selectedItem.prec_descuento="0.000";
										
										
										if(arrayDg.length==1){
											totGralDesc=Number(grid.selectedItem.prec_descuento);
											
											
											
										}else{
											
											for(var j:int=0;j<arrayDg.length;j++){
												
												if(arrayDg[j].idproduct!=grid.selectedItem.idproduct){
													tempTotDesc=tempTotDesc+Number(arrayDg[j].prec_descuento);
													tempPorcDes=tempPorcDes+Number(arrayDg[j].porc_desc);
												}
												
												
											}
											
											
											
											
											
											totGralDesc=Number(tempTotDesc.toFixed(3));
											
											temp_tot_porc_desc=0;
											
											temp_tot_porc_desc=Number(tempPorcDes.toFixed(3))+Number(Number(newValue).toFixed(3));
											
											
											
											
											
										}
										
										
									}else{
										
										if(col==5&&newValue>0){
											
											porcentajedescuento=newValue;
											
											tempPrecDesc=grid.selectedItem.prec_descuento;
											
											precio=Number(Number(grid.selectedItem.price));
											
											grid.selectedItem.prec_descuento=Number(precio-Number(Number(grid.selectedItem.price*(porcentajedescuento/100)))).toFixed(3);
											
											
											grid.selectedItem.subtotal=grid.selectedItem.prec_descuento*grid.selectedItem.countt;
											
											precio_descontado_result_porcentaje=Number(Number(grid.selectedItem.subtotal*(porcentajedescuento/100)));
											
											
											
											if(arrayDg.length==1){
												totGralDesc=Number(grid.selectedItem.prec_descuento);
												
												
												
											}else{
												
												
												for(var k:int=0;k<arrayDg.length;k++){
													
													if(arrayDg[k].idproduct!=grid.selectedItem.idproduct){
														tempTotDesc=tempTotDesc+Number(arrayDg[k].prec_descuento);
														tempPorcDes=tempPorcDes+Number(arrayDg[k].porc_desc);
													}
													
												}
												
												
												
												
												
												totGralDesc+=Number(tempTotDesc.toFixed(3))+Number(Number(grid.selectedItem.prec_descuento).toFixed(3));
												
												
												
												temp_tot_porc_desc+=Number(tempPorcDes.toFixed(3))+Number(Number(newValue).toFixed(3));
												
												
												
												
												
												
											}
										}
									}
									
									
									
									
									
									
									
									
								}
								//---------------------------------------------------------------------------------------------------------------------------------
								
								
								
							}
							
							
						}
						
						
						
						
					}
					
					
					
					
					
				}
				arrayDg.refresh();
				
				//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(int(txtdescuento.text)==0||txtdescuento.text.length==0){
					lblTotGral.text=String(totGral.toFixed(3));
					lbldescuento.text=Number(Number(-totGralDesc)).toFixed(3);
					lblTotApagar.text=Number(Number(lblTotGral.text)-Number(totGralDesc.toFixed(3))).toFixed(3);
				}
				
				
				var calcrecargo:Number=0;
				var calcanticipo:Number=0;
				
				if(int(mskrecargo.text)>0){
					
					calcularRecargoVariant()
					
				}
				if(int(mskanticipo.text)>0){
					calcularAnticipo();
					
				}
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			public function anticipocalculoreuso():void{				
				anticipo=Number(Number(Number(Number(lblTotApagar.text).toFixed(3))-Number(mskanticipo.text)).toFixed(3));
				lblsaldo.text=anticipo.toFixed(3);
			}
			//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			public function calcularAnticipo():void{
				if(int(mskanticipo.text)==0||mskanticipo.text.length==0){
					lblsaldo.text="0.000";
					anticipo=0;
				}else 
					anticipocalculoreuso();
				
				
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			public function calcularRecargoVariant():void{
				var recargo:Number=0;
				var totgral:Number=Number(Number(lblTotGral.text).toFixed(3));
				var descTotal:Number=Math.abs(Number(lbldescuento.text));
				
				if(Number(mskrecargo.text)==0||mskrecargo.text.length==0){
					
					tot_recargo=0;
					lbltotalconrecargo.text="0.000";
					lblTotApagar.text=Number(totgral-descTotal).toFixed(3);
					
				}else{
					if(tot_recargo==Number(mskrecargo.text))
						tot_recargo=Number(mskrecargo.text);
					else					
						tot_recargo+=Number(mskrecargo.text);
					
					var calcularTotalAPagar:Number=totgral-descTotal;
					
					recargo=tot_recargo*Number(calcularTotalAPagar.toFixed(3))/100;
					lbltotalconrecargo.text=Number(Number(calcularTotalAPagar.toFixed(3))+recargo).toFixed(3);
					
					var lbltotrecargo:Number=Number(Number(lbltotalconrecargo.text).toFixed(3));					
					var lbltotdesc:Number=Math.abs(Number(lbldescuento.text));					
					lblTotApagar.text=Number(lbltotrecargo).toFixed(3);
					
					mskrecargo.text=tot_recargo.toFixed(2);
					
					
					
				}
				
				
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			private function calcularRecargo(evt:CloseEvent):void{
				
				if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
				
				calcularRecargoVariant();
				calcularAnticipo();
				
				
			}
			//---------------------------------------------------------------------------------
			//}
			//----------------------------------------------------------------------------------------------------------

			
			protected function group1_initializeHandler(event:FlexEvent):void
			{
				wsnotas.getRecorCountNotas();
				productosWs.searchAllProductos();
				cmbproduct.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtpreciop.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtdescuento.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				mskcantidad.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				mskrecargo.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				mskanticipo.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				adglistpedprod.addEventListener(AdvancedDataGridEvent.ITEM_EDIT_END,itemEditEndHandler);
				
				
				cmbproduct.selectedItemId=1;
				totGral=0;
				totGralDesc=0;
				precio_desc=0;
				porc_d=0;
				porc_desc_total=0;
			}
			protected function btnremover_clickHandler(event:MouseEvent):void
			{
				if(arrayDg.length>0)
					Alert.show("Esta seguro de remover los productos Listados?","Confirmar EliminaciÃ³n", Alert.YES | Alert.NO, this, removerListadoPedidos, null, Alert.NO);
				
			}
			private function transferirFocus(KeyPress:KeyboardEvent):void{
				
				var b:Boolean=false;
				if(KeyPress.keyCode==Keyboard.ENTER){
					if(cmbproduct.text!=""&&KeyPress.currentTarget.toString().indexOf("cmbproduct")!=-1){
						focusManager.setFocus(txtpreciop);
						txtpreciop.text=cmbproduct.selectedItem.precio;
						
					}
					if(KeyPress.currentTarget.toString().indexOf("mskcantidad")!=-1&&Number(mskcantidad.text)>0){
						for (var i:int=0;i<arrayDg.length && !b;i++){
							
							if((String(arrayDg[i].name).toUpperCase()==String(cmbproduct.text).toUpperCase()) && Number(arrayDg[i].price) != Number(txtpreciop.text)){
								Alert.show("Imposible Cargar, este Item se encuentra cargado con un Precio diferente, corrija!!!");
								b=true;
								
							}
							
						}
						if(b.valueOf()){
							
							return;
						}else{		
							
							addadglistpedprod(cmbproduct.selectedItem.idproduct,cmbproduct.selectedItem.id,txtpreciop.text,mskcantidad.text,cmbproduct.selectedItem.descripcion,txtdescuento.text);	
						}
					}
					if(KeyPress.currentTarget.toString().indexOf("txtpreciop")!=-1&& int(txtpreciop.text)>0)
						focusManager.setFocus(mskcantidad);
					
					if(KeyPress.currentTarget.toString().indexOf("txtdescuento")!=-1 && Number(Number(txtdescuento.text).toFixed(3))>0){
						
						Alert.show("Desea Agregar el Descuento al Listado?","Confirmar OperaciÃ³n", Alert.YES | Alert.NO, this, calcularDescuentoTotal, null, Alert.NO);
						
						
					}
					if(KeyPress.currentTarget.toString().indexOf("mskrecargo")!=-1)
						Alert.show("Desea Agregar el Recargo al Listado?","Confirmar OperaciÃ³n", Alert.YES | Alert.NO, this, calcularRecargo, null, Alert.NO);
					
					if(KeyPress.currentTarget.toString().indexOf("mskanticipo")!=-1)
						calcularAnticipo();
					
					
				}
			}
			private function addadglistpedprod(idprod:String,codigoId:String,txtprecio:String,cantidad:String,descripcion:String,desc_porc:String):void{
				
				var subtot:Number;
				var b:Boolean=false;
				var p_desc:Number=0;
				
				arrayDg.refresh();
				subtot=Number(Number(Number(Number(txtprecio).toFixed(3))*Number(cantidad)).toFixed(3));
				totGral=Number(Number(totGral.toFixed(3))+Number(subtot.toFixed(3)));
				
				
				
				
				if(dp.length==0){
					dp=[{idproduct:idprod,id:codigoId,name:descripcion,countt:cantidad,price:txtprecio,porc_desc:"0.000",prec_descuento:p_desc,subtotal:subtot}];
					totGralDesc=totGralDesc+Number(Number(desc_porc).toFixed(3));
				}else{
					
					for(var i:int=0;i<dp.length && !b;i++){	
						
						//------------------------------------------------------------------					
						if(dp[i].name==descripcion){
							
							dp[i].countt=int(dp[i].countt)+int(cantidad);					
							dp[i].subtotal=dp[i].subtotal+subtot-p_desc;
							
							
							b=true;
							
						}
						//------------------------------------------------------------------
					}
					if(!b)					
						dp.push({idproduct:idprod,id:codigoId,name:descripcion,countt:cantidad,price:txtprecio,porc_desc:"0.000",prec_descuento:p_desc,subtotal:subtot});
					
				}
				
				//-------------------------------------------------------------------------		
				arrayDg.source=dp;
				arrayDg.refresh();
				//-------------------------------------------------------------------------
				btnremover.enabled=true;
				
				adglistpedprod.dataProvider=arrayDg;
				lblTotGral.text=String(totGral.toFixed(3));
				
				
				
				
				calcularDescuentoVariant();
				
				calcularAnticipo();
				
				calcularRecargoVariant();
				
				
				
				
				mskcantidad.text="";
				txtpreciop.text="";
				
				cmbproduct.setFocus();
				
			}
			//--------------------------------------------------------------------------------------
			//---------------------------------------------------------------------------------
			private function calcularDescuentoTotal(evt:CloseEvent):void{
				
				var b:Boolean=false;
				
				if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
				
				
				for(var i:int=0;i<arrayDg.length && !b;i++){
					if(arrayDg[i].porc_desc != 0){
						b=true;
						
						Alert.show("No se puede calcular el descuento por que hay productos con descuentos en el listado!!!");
						
						
					}
					
					
				}
				
				if(b)
					return;
				
				
				calcularDescuentoVariant();
				
				
				if(int(lbltotalconrecargo.text)>0)
					calcularRecargoVariant();
				
				if(anticipo>0)
					anticipocalculoreuso();	
				
				
				
			}
			
			protected function calcularDescuentoVariant():void{
				var tot_desc:Number=0;
				var por_des_tot:Number=0;
				
				if(int(txtdescuento.text)>0){
					por_des_tot=Number(Number(txtdescuento.text).toFixed(2));
					porc_desc_total=Number(por_des_tot.toFixed(2));							
					tot_desc= Number(Number(lblTotGral.text).toFixed(3))*por_des_tot/100;						
					lbldescuento.text=Number(Number(-tot_desc)).toFixed(3);
					
				}else
					lbldescuento.text="0.000";
				
				lblTotApagar.text=String(Number(Number(lblTotGral.text)-tot_desc).toFixed(3));
				
			}
			
			
			//-------------------------------------------------------------------------------------
			
			//---------------------------------------------------------------------------------
			//--------------------------------------------------------------------------------------
			public function removerListadoPedidos(cls:CloseEvent):void{
				
				//----------------------------------------------------------
				adglistpedprod.dataProvider.removeItems();
				arrayDg.removeAll();
				arrayDg.refresh();
				
				//----------------------------------------------------------
				totGral=0;
				totGralDesc=0;
				precio_desc=0;
				txtdescuento.text="0.0";
				cmbproduct.text="";
				cmbproduct.setFocus();
				txtpreciop.text="";
				mskcantidad.text="";					
				btnremover.enabled=false;
				lblTotApagar.text="0.000";
				lblTotGral.text="0.000";
				porc_d=0;
				porc_desc_total=0;
				lbldescuento.text="0.000";
				lbltotalconrecargo.text="0.000";
				lblsaldo.text="0.000";
				desc_resto=0;
				tot_recargo=0;
				anticipo=0;
				
				
				
				
				//--------------------------------------------------------
				
				
				
			}
			protected function brncargarunproducto_clickHandler(event:MouseEvent):void
			{
				var popup:datosProducto=datosProducto(PopUpManager.createPopUp(this,datosProducto,true));
				
				popup.product=productlist;
				PopUpManager.centerPopUp(popup);
			}
			protected function operation1_faultGetRecord(event:FaultEvent):void
			{
				Alert.show("ERROR "+event.fault.toString());
				
			}
			protected function operation1_resulGetRecord(event:ResultEvent):void
			{
				
				if(String(event.result.toString())=="LA CONSULTA NO ARROJÃ“ RESULTADOS")
					Alert.show("LA CONSULTA NO ARROJÃ“ RESULTADOS");
				else{
					if(String(event.result.toString())=="NADA"){
						Alert.show("FALLÃ“ LA CONEXION CON LA BASE DE DATOS, REVISE LOS SERVICIOS SI SE HAN INICIADO CORRECTAMENTE.");
					}else{
						xmlproduct=new XMLList(event.result);							
						cmbproduct.dataProvider=productlist;						
					}
				}
				
				
				
				
			}
			//--------------------------------------------------------------------------
			protected function adglistpedprod_itemDoubleClickHandler(event:mx.events.ListEvent):void
			{
				// TODO Auto-generated method stub
				
				Alert.show("EstÃ¡ seguro de eliminar el Registro actual?","Confirmar EliminaciÃ³n", Alert.YES | Alert.NO, this, delRowHandler, null, Alert.NO);
				
				
			}
			//--------------------------------------------------------------------------------------
			//--------------------------------------------------------------------------------------
			protected function delRowHandler(evt:CloseEvent):void{
				var desc_parcial:Number=0;
				var recargo:Number=0;
				var tempTotDesc:Number=0;
				var tempPorcDes:Number=0;
				//----------------------------------------------------------------------------------
				if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;			
				
				
				
				
				//----------------------------------------Recargo si hay-------------------------------
				if(tot_recargo>0){
					
					recargo=tot_recargo*totGral/100;
					lbltotalconrecargo.text=Number(totGral+recargo).toFixed(3);
					
				}
				
				
				
				
				//---------------------------------------------------------------------------------	
				
				
				
				
				
				
				//---------------------------------------------------------------------------------Controlo los descuentos y totales gral
				var totgrilla:Number=0;
				for(var k:int=0;k<arrayDg.length;k++){
					
					if(arrayDg[k].idproduct!=adglistpedprod.selectedItem.idproduct){
						if(arrayDg[k].porc_desc>0){
							tempTotDesc=tempTotDesc+Number(arrayDg[k].prec_descuento);
							tempPorcDes=tempPorcDes+Number(arrayDg[k].porc_desc);
						}
						if(arrayDg[k].subtotal>0&&arrayDg[k].porc_desc==0)
							totgrilla=totgrilla+(arrayDg[k].price*arrayDg[k].countt);	
						
					}
					
					
				}
				//---------------------------------------------------------------------------------	
				adglistpedprod.dataProvider.removeItemAt(adglistpedprod.selectedIndex);
				
				arrayDg.refresh();
				
				
				Alert.show(arrayDg.length.toString(10));
				
				
				
				//-------------------------------------------------------------------------------
				if(arrayDg.length==0){
					
					totGral=0;
					totGralDesc=0;
					precio_desc=0;
					txtdescuento.text="0.0";
					
					txtpreciop.text="";
					mskcantidad.text="";					
					btnremover.enabled=false;
					lblTotApagar.text="0.000";
					lblTotGral.text="0.000";
					porc_d=0;
					anticipo=0;
					porc_desc_total=0;		
					lbldescuento.text="0.000";
					lblsaldo.text="0.000";
					lbltotalconrecargo.text="0.000";
					desc_resto=0;
					tot_recargo=0;
					temp_tot_porc_desc=0;
					tempPorcDes=0;
					tempTotDesc=0;
					
				}else{
					totGral=totgrilla;
					lblTotGral.text=totGral.toFixed(3);
					if(txtdescuento.text.length>0){
						calcularDescuentoVariant();
						calcularAnticipo();
						
					}else{
						
						totGralDesc=0;
						
						totGralDesc=Number(tempTotDesc.toFixed(2));
						
						temp_tot_porc_desc=0;
						
						temp_tot_porc_desc=Number(tempPorcDes.toFixed(2));
						
						
						lblTotApagar.text=totGralDesc.toFixed(3);
						
						lbldescuento.text=Number(desc_resto).toFixed(3);
						
					}
					
					
					
					
				}
				
				
				cmbproduct.setFocus();
				//------------------------------------------------------------------------------
				
			}
			//--------------------------------------------------------------------------------------
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:XMLListCollection id="productlist" source="{xmlproduct.producto}"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:ArrayCollection id="arrayDg"/>
		<s:DateTimeFormatter id="dtf" dateTimePattern="dd/MM/yyyy"/>
		<s:WebService id="wsnotas" wsdl="http://localhost:8080/ServiceNotaPedido/NotaPedidoWs?WSDL" showBusyCursor="true">
			<s:operation name="getRecorCountNotas"
						 result="operation1_resultHandler(event)"
						 fault="operation1_faultHandler(event)">
				
			</s:operation>
			<s:operation name="selectAllNotas"
						 result="operation2_resultHandler(event)"
						 fault="operation2_faultHandler(event)">
				
			</s:operation>
			<s:operation name="verNotasPedidoPaginadas"
						 result="operation3_resultHandler(event)"
						 fault="operation3_faultHandler(event)">
				
			</s:operation>
		</s:WebService>
		<s:WebService id="productosWs" wsdl="http://localhost:8080/ServiceProductos/ProductosWs?wsdl"
					  showBusyCursor="true">
			<s:operation name="searchAllProductos"
						 fault="operation1_faultGetRecord(event)"
						 result="operation1_resulGetRecord(event)">
				
			</s:operation>
		</s:WebService>
		<s:XMLListCollection id="notas" source="{xmlNotas.item}"/>
		<s:XMLListCollection id="detallenotas"/>		
		<s:ArrayCollection id="detallenotasList"/>
		<s:CurrencyFormatter id="cf" currencySymbol="$" fractionalDigits="3" locale="es-AR"  
							 decimalSeparator="." groupingSeparator="," currencyISOCode="locale and OS dependent" useCurrencySymbol="false"/>
		<s:Label x="479" y="150" text="Observaciones:"/>
		
	</fx:Declarations>
	
	<s:Button id="first_btn" x="29" y="130" width="85" label="First"
			  click="first_clickHandler(event)" enabled="false" fontSize="16"/>
	<s:Button id="prev_btn" x="335" y="130" width="88" label="Prev"
			  click="prev_btn_clickHandler(event)" enabled="false" fontSize="16"/>
	<s:Button id="next_btn" x="646" y="131" width="84" label="Next"
			  click="next_btn_clickHandler(event)" enabled="false" fontSize="16"/>
	<s:Button id="last_btn" x="913" y="129" width="89" label="Last" click="last_clickHandler(event)"
			  enabled="false" fontSize="16"/>
	<s:DataGrid id="adgNotas" x="29" y="10" width="973" height="111"  variableRowHeight="true" doubleClick="adgNotas_doubleClickHandler(event)"
				selectionMode="singleRow" doubleClickEnabled="true">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="NÂ° Nota" dataField="id"/>
				<s:GridColumn headerText="Fecha Compra" dataField="fechacompra"
							  rendererIsEditable="true"  >
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								<mx:DateField editable="true" text="@{data.fechacompra}" formatString="DD/MM/YYY" 
											  horizontalCenter="0" verticalCenter="0"
											  width="80%"/>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
					
				</s:GridColumn>
				<s:GridColumn headerText="Fecha Entrega" dataField="fechaentrega"
							  rendererIsEditable="true"  >
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								<mx:DateField editable="true" text="@{data.fechaentrega}" formatString="DD/MM/YYY" 
											  horizontalCenter="0" verticalCenter="0"
											  width="80%"/>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
					
				</s:GridColumn>
				<s:GridColumn headerText="Pago" dataField="montototalapagar"/>
				<s:GridColumn headerText="Total" dataField="total"/>
				<s:GridColumn headerText="Saldo" dataField="saldo"/>
				<s:GridColumn headerText="Recargo" dataField="recargo"/>
				<s:GridColumn headerText="RecargoTotal" dataField="recargototal"/>
			</s:ArrayList>
		</s:columns>		
	</s:DataGrid>
	<s:Label x="30" y="176" fontFamily="Verdana" fontSize="16" fontWeight="normal" text="Cliente:"/>
	<s:Label id="lblnombreyapecli" x="104" y="171" width="288" fontSize="16"/>
	<s:TextArea id="txtobservaciones" x="554" y="167" width="447" height="110" maxChars="32000"/>
	
	<mx:AdvancedDataGrid id="adglistpedprod" x="43" y="287" width="809" height="149"
						 alternatingItemColors="[#adf1f5, white]"
						
						 designViewDataType="flat" doubleClickEnabled="true" editable="true"
						 fontFamily="Verdana" itemDoubleClick="adglistpedprod_itemDoubleClickHandler(event)" fontSize="15"
						 rowCount="8"
						 variableRowHeight="true">
		<mx:columns>
			<mx:AdvancedDataGridColumn id="idproducto" visible="false" dataField="idproduct"/>
				
			
			<mx:AdvancedDataGridColumn  width="52" dataField="id" editable="false"
									   fontFamily="Verdana" fontSize="10" headerText="Codigo"
									   resizable="false" textAlign="left" textDecoration="none"/>
			<mx:AdvancedDataGridColumn width="84" dataField="name" editable="false"
									   fontFamily="Verdana" fontSize="10" headerText="Descripcion"
									   resizable="false" textAlign="left"/>
			<mx:AdvancedDataGridColumn width="35" dataField="countt" editable="true"  
									   fontFamily="Verdana" fontSize="10" headerText="Cantidad"
									   resizable="false" sortable="false" textAlign="center"/>
			<mx:AdvancedDataGridColumn width="45" dataField="price" draggable="false" editable="true"
									   fontFamily="Verdana" fontSize="10" formatter="{cf}"
									   headerText="PrecioU" resizable="true" sortable="false"
									   textAlign="center"/>
			<mx:AdvancedDataGridColumn editable="true" dataField="porc_desc" fontFamily="Verdana" fontSize="10"
									   headerText="% Descuento" resizable="false" sortable="false"
									   textAlign="center" width="33"/>
			<mx:AdvancedDataGridColumn width="33" dataField="prec_descuento" editable="false"
									   fontFamily="Verdana" fontSize="10" formatter="{cf}"
									   headerText="Precio Desc"/>
			<mx:AdvancedDataGridColumn width="52" color="red" dataField="subtotal" draggable="false"
									   editable="false" fontFamily="Verdana" fontSize="10"
									   fontWeight="bold" formatter="{cf}" headerText="SubTotal"
									   resizable="false" sortable="false" textAlign="right"/>
		</mx:columns>
	</mx:AdvancedDataGrid>
	<s:Label x="591" y="443" color="#1D7F03" fontFamily="Verdana" fontSize="16" fontWeight="bold"
			 text="TOTAL GRAL $:" verticalAlign="top"/>
	<s:Label id="lblTotGral" x="725" y="441" width="124" color="#127B1A" fontFamily="Verdana"
			 fontSize="16" fontWeight="bold" text="0.0" textAlign="right" verticalAlign="bottom"/>
	<s:Label x="560" y="479" color="#E2AA14" fontFamily="Verdana" fontSize="16" fontWeight="bold"
			 text="TOTAL A PAGAR $:"/>
	<s:Label id="lblTotApagar" x="722" y="478" width="127" color="#F9BD05" fontFamily="Verdana"
			 fontSize="16" fontWeight="bold" text="0.0" textAlign="right" verticalAlign="bottom"/>
	<s:Label x="594" y="460" width="135" height="14" color="#F84B07" fontFamily="Verdana"
			 fontSize="16" fontWeight="bold" text="DESCUENTO $:"/>
	<s:Label id="lbldescuento" x="724" y="460" width="125" color="#F84B07" fontFamily="Verdana"
			 fontSize="16" fontWeight="bold" text="0.0" textAlign="right"/>
	<s:Label x="504" y="499" width="223" color="#04667F" fontFamily="Verdana" fontSize="16"
			 fontWeight="bold" text="TOTAL CON RECARGO $:" textAlign="right"/>
	<s:Label x="504" y="517" width="223" color="#7F1E04" fontFamily="Verdana" fontSize="16"
			 fontWeight="bold" text="SALDO $:" textAlign="right"/>
	<s:Label id="lbltotalconrecargo" x="725" y="497" width="124" color="#04667F" fontFamily="Verdana"
			 fontSize="16" fontWeight="bold" text="0.0" textAlign="right"/>
	<s:Label id="lblsaldo" x="725" y="516" width="124" color="#7F2704" fontFamily="Verdana"
			 fontSize="16" fontWeight="bold" text="0.0" textAlign="right"/>
	<s:Label x="516" y="554" fontFamily="Verdana" fontSize="16" fontWeight="normal" text="TOTAL CON RECARGO %:"
			 textAlign="right"/>
	<controls:MaskedTextInput id="mskrecargo" x="725" y="547" width="60" fontFamily="Verdana" text="0.00" maxChars="5"
							  fontSize="16" restrict="0-9." toolTip="Ingresa un Porcentaje de recargo total para los productos cargados"/>
	<s:Label x="621" y="584" fontFamily="Verdana" fontSize="16" fontWeight="normal" text="ANTICIPO $:"
			 textAlign="right"/>
	<controls:MaskedTextInput text="0.0" id="mskanticipo" x="725" y="576" width="103" fontFamily="Verdana"
							  fontSize="16" restrict="0-9."/>
	<s:Label x="29" y="214" fontFamily="Verdana" fontSize="16" text="Producto:"/>
	<s:Label x="34" y="239" fontFamily="Verdana" fontSize="16" text="Precio $:"/>
	<s:TextInput id="txtpreciop" x="110" y="231" width="187" fontSize="16" fontWeight="bold"
				 maxChars="6" restrict="0-9." tabEnabled="false"/>
	<s:Label x="25" y="267" fontFamily="Verdana" fontSize="16" text="Cantidad:"/>
	<controls:MaskedTextInput id="mskcantidad" x="110" y="258" width="55" fontFamily="Verdana"
							  tabEnabled="false" fontSize="16" fontWeight="bold" maxChars="3" restrict="0-9"/>
	<components:AutoComplete id="cmbproduct" x="110" y="201" width="203" allowDuplicates="false"
							 dropDownRowCount="10" fontSize="16" fontWeight="bold"
							 labelField="descripcion" matchType="beginning" tabEnabled="false">
	</components:AutoComplete>
	<s:Button id="btnremover" x="43" y="484" label="Remover Todo"
			  click="btnremover_clickHandler(event)" enabled="false" fontSize="16"
			  toolTip="Elimina todos Los productos del Listado!!!"/>
	<s:Button id="brncargarunproducto" x="43" y="505" label="Cargar Producto"
			  click="brncargarunproducto_clickHandler(event)" fontSize="16"
			  toolTip="Muestra una Ventana para cargar un Producto"/>
	<s:Label x="335" y="263" fontFamily="Verdana" fontSize="16" fontWeight="normal" text="% Descuento:"/>
	<controls:MaskedTextInput text="0.00" maxChars="5" x="452" y="256" width="60" fontFamily="Verdana" fontSize="16" id="txtdescuento" restrict="0-9." toolTip="Ingresa un porcentaje de descuento, aplicable a todos los productos de la planilla"/>
</s:Group>



