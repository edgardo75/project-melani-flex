<?xml version="1.0" encoding="ISO-8859-1"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:components="com.components.*" toolTip="Formulario de carga para Datos Personales Básicos de un Cliente!!!"
		 width="1088" height="396" creationComplete="group1_creationCompleteHandler(event)" xmlns:clients="com.components.clients.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:WebService id="servicesCliente" wsdl="http://192.168.1.101:8080/ServiceClientes/ClientesWs?WSDL"
					  
					  showBusyCursor="false"
					  useProxy="false">
			<s:operation name="addCliente"
						 resultFormat = "object"
						 result="operation1_resultHandler(event)"
						 fault="operation1_faultHandler(event)">				
			</s:operation>			
		</s:WebService>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.components.utils.BarraProgreso;
			
			import mx.controls.Alert;
			import mx.controls.ProgressBar;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private var popupWait:BarraProgreso;
			private var vResult:ValidationResultEvent;
			
			
			
				protected function getDatosCliente():String{
					if(clienteComp.txtemail.text==null)
						clienteComp.txtemail.text="EMAIL NO INGRESADO";
					var datosCliente:String=
						"<ClienteDomicilioTelefono>\n"+
							"<item>\n"+
								"<apellido>"+clienteComp.txtapellido.text.toUpperCase()+"</apellido>\n"+
								"<nombre>"+clienteComp.txtnombre.text.toUpperCase()+"</nombre>\n"+
								"<email>"+clienteComp.txtemail.text.toLowerCase()+"</email>\n"+
								"<observaciones>"+clienteComp.txtobservaciones.text+"</observaciones>\n"+
								"<nrodocu>"+clienteComp.txtdocumento.text+"</nrodocu>\n"+
								"<idtipodocu>"+clienteComp.cmbTiposdocu.selectedItemId+"</idtipodocu>\n"+
								"<totalcompras>0</totalcompras>\n"+
								"<totalpuntos>0</totalpuntos>\n"+
								"<idcliente>0</idcliente>\n"+
								"<genero>\n"+
									"<idgenero>"+clienteComp.cmbGeneros.selectedItemId+"</idgenero>\n"+
								"</genero>\n"+
							"</item>\n" +
							""+clienteComp.compTelefono.getDatosTelefonos()+""+							
						"</ClienteDomicilioTelefono>\n";
					return datosCliente;
				}
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
			
				focusManager.setFocus(clienteComp.txtdocumento);
				
				
			}
			public static function retornoSwitch(retorno:int):int
			{
				switch(retorno){
					case 0:{Alert.show("Ocurrió un Error en el Servidor con los Datos, verifique!!!");
						break;
					}
					case -1:{Alert.show("Error en el Server, verifique!!!");
						break;
					}
					case -2:{Alert.show("Error en el Server, verifique!!!");
						break;
					}	
					case -3:{Alert.show("Error en el Server, verifique!!!");
						break;
					}
					case -6:{Alert.show("Error en el Server, verifique!!!");
						break;
					}
					case -8:{Alert.show("Email encontrado ya registrado en la base de datos");
						break;
					}						
					case -7:{Alert.show("No pasó nada al buscar un email, verifique!!!");
						break;
					}
					case -9:{Alert.show("El documento encontrado no pertenece a un cliente!!!");
						break;
					}	
					case -11:{Alert.show("Email no válido!!!");
						break;
					}
					case -14:{Alert.show("Numero de documento no válido!!!");
						break;
					}
					case -13:{Alert.show("Apellído no válido!!!");
						break;
					}
					case -12:{Alert.show("Nombre no válido!!!");
						break;
					}
					case -15:{Alert.show("Número de teléfono no válido!!!");
						break;
					}
						
				}	
				return retorno;
				
			}
			
			protected function operation1_resultHandler(event:ResultEvent):void
			{
				PopUpManager.removePopUp(popupWait);
				
				var indice:Number;
				
				if(event.result.toString().indexOf("<Lista>")!=-1){
					Alert.show("Datos Almacenados Correctamente");
					clienteComp.clearComponenteCliente();
				}else{
						indice=new Number(event.result.toString());
						if(retornoSwitch(indice)>0){
							Alert.show("Datos Almacenados Correctamente");
							clienteComp.clearComponenteCliente();
				}
				}
					
		
				
				
			}
			//-----------------------------------------------------------
			protected function operation1_faultHandler(event:FaultEvent):void
			{
				PopUpManager.removePopUp(popupWait);
				Alert.show("ERROR EN EL SERVIDOR CON DATOS\n PERSONALES DE CLIENTE");
				
			}
			//-----------------------------------------------------------
			protected function btnClose_clickHandler(event:MouseEvent):void
			{
				this.removeAllElements();
			}
			//-----------------------------------------------------------			
			protected function validateAndSubmit(event:MouseEvent):void
			{
				// Validate the required fields. 
			
								vResult = clienteComp.nomV.validate();
								//-----------------------------------------------------------
								if(vResult.type==ValidationResultEvent.INVALID)
									return;
								else{
									
									vResult=clienteComp.apeV.validate();
									if(vResult.type==ValidationResultEvent.INVALID)
										return;
									
									
								}
								//-----------------------------------------------------------
								if(clienteComp.cmbTiposdocu.selectedItem==null){
									Alert.show("Seleccione un Tipo de Documento DNI, LE, LC, PASAPORTE");
									return;
								}
								//-----------------------------------------------------------
								if(clienteComp.txtdocumento.text.length==0){
									Alert.show("Ingrese un número de Documento!!!");
									return;
								}else{
									if(clienteComp.txtdocumento.text.length<7){
										Alert.show("Ingrese un número de Documento de manera correcta");
										return;
										
									}
								}
								//------------------------------------------------------------
								if(clienteComp.cmbGeneros.selectedItem==null){
									Alert.show("Debe Seleccionar el Genero F o M");
									return;
								}
								//-------------------------------------------------------------					
				
				
				
				///SendData to Server
				popupWait = BarraProgreso(PopUpManager.createPopUp(this, BarraProgreso, true));				
				PopUpManager.centerPopUp(popupWait);
				//-------------------------------------------------------------
				
				//-------------------------------------------------------------
				
				servicesCliente.addCliente(getDatosCliente());
				
				
			}
			
		]]>
	</fx:Script>
	
	
	
	<clients:DatosCliente id="clienteComp" x="5" y="20" width="1063" fontSize="16">
	</clients:DatosCliente>
	<s:Button id="btnGuardarCli" x="501" y="357" width="94" height="29" label="Guardar"
			  click="validateAndSubmit(event)" fontSize="16"/>
	<s:Button id="btnCloseClientComponent" x="1063" y="10" width="16" height="19" icon="assets/icon_close.png" click="btnClose_clickHandler(event)"/>
</s:Group>
