<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:components="com.hillelcoren.components.*"
		 xmlns:controls="com.adobe.flex.extras.controls.*"
		 width="814" height="300" creationComplete="group1_creationCompleteHandler(event)" xmlns:local="*">
	<fx:Style>
		
		
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.controls.TextInput;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			import spark.components.TextInput;

			[Bindable]
			private var xmlProvincias:XMLList;
			[Bindable]
			private var xmlLocalidades:XMLList;
			[Bindable]
			private var xmlBarrios:XMLList;
			[Bindable]
			private var xmlCalles:XMLList;
			[Bindable]
			private var idlocalidad:int=0;
			[Bindable]
			private var idprovincia:int=0;
			[Bindable]
			private var idBarrio:int=0;
			[Bindable]
			private var idCalle:int=0;
			
			protected function operation1_resultHandler(event:ResultEvent):void
			{
				xmlProvincias=new XMLList(event.result);	
				
				cmbprovincias.dataProvider=provinciaslist;
				cmbprovincias.selectedItemId=18;
				idprovincia=cmbprovincias.selectedItemId;
				
			}
			
			protected function operation1_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				
				Alert.show("Error al Conectar al Servidor!!!");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			public function clearFormDomicilios():void{
				
				
				
					
				
				cmbbarrios.selectedItemId=0;
				cmbcalles.selectedItemId=0;
				
				cmborientacion.selectedItemId=5;
				
				txtcodpostal.text="5400";
				txtarea.text="";
				
				txtentrecalle.text="";
				txtmanzana.text="";
				txtmonoblock.text="";
				txtnumdepto.text="";
				txtnumero.text="";
				txtobservaciones.text="";
				txtpiso.text="";
				txtsector.text="";
				txttorre.text="";
				
				if(cmbprovincias.selectedItemId!=18){
					cmbprovincias.selectedItemId=18;
					wslocaliades.searchAllLocalidadesbyidprov(18);
					cmbLocalidades.selectedItemId=30002;
				}else{
					cmbprovincias.selectedItemId=18;
					cmbLocalidades.selectedItemId=30002;
				}
				
			
			
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				
				serviceProvincias.searchAllProvincias();
				wslocaliades.searchAllLocalidadesbyidprov(18);
				wsbarrios.searchAllBarrios();
				wscalles.searchAllCalles();
				cmborientacion.dataProvider=orientlist;
				cmborientacion.selectedItemId=5;
				cmbbarrios.selectedItemId=0;
				cmbcalles.selectedItemId=0;
				
				cmbLocalidades.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				cmborientacion.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				cmbprovincias.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				cmbbarrios.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				cmbcalles.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				
				txtentrecalle.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtmanzana.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtmonoblock.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtnumdepto.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtnumero.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtobservaciones.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtpiso.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtsector.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txttorre.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtarea.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				btnAddLocalidades.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				btnaddbarrios.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				btnaddcalles.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				
				cmbLocalidades.setFocus();
			
				
				txtcodpostal.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				
			
				
				
			}
			//----------------------------------------------------------------------------------
			private function buscarlocalidades(evt:CloseEvent):void{
				if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)){ 
					
					cmbprovincias.selectedItemId=18;
					cmbLocalidades.setFocus();
					
					return;
				
				}
				if(idlocalidad>0)
					idlocalidad=0;
				idprovincia=cmbprovincias.selectedItem.id;
				wslocaliades.searchAllLocalidadesbyidprov(int(cmbprovincias.selectedItem.id));
			
			}
			///--------------------------------------------------------------------------------
			private function transferirFocus(KeyPress:KeyboardEvent):void{
					if(KeyPress.keyCode==Keyboard.ENTER){
							if(cmbprovincias.text!=""&&KeyPress.currentTarget.toString().indexOf("cmbprovincias")!=-1){
							
								Alert.show("Desea cambiar de Provincia ?","Confirmar OperaciÃ³n", Alert.YES | Alert.NO, this, buscarlocalidades, null, Alert.YES);
										
								
							}else{
									if(cmbLocalidades.text!=""&&KeyPress.currentTarget.toString().indexOf("cmbLocalidades")!=-1){
											txtcodpostal.setFocus();
											
											txtcodpostal.text=String(cmbLocalidades.selectedItem.codigopostal);
											
									
									}else{
											if(txtcodpostal.text.length>0&&KeyPress.currentTarget.toString().indexOf("txtcodpostal")!=-1){
														if(btnAddLocalidades.enabled==false){
															btnAddLocalidades.enabled=true;
															btnAddLocalidades.setFocus();
														}else
															cmborientacion.setFocus();
											
											}
									
									
									}
							
							
							}
							if(txtentrecalle.text.length>0&&KeyPress.currentTarget.toString().indexOf("txtentrecalle")!=-1){
								txtobservaciones.setFocus();
							}
							if(txtmanzana.text.length>0&&KeyPress.currentTarget.toString().indexOf("txtmanzana")!=-1){
								txtsector.setFocus();
							}
							if(txtmonoblock.text.length>0&&KeyPress.currentTarget.toString().indexOf("txtmonoblock")!=-1){
								txtarea.setFocus();	
							}
							if(txtnumdepto.text.length>0&&KeyPress.currentTarget.toString().indexOf("txtnumdepto")!=-1){
								txtpiso.setFocus();
							}
							if(txtnumero.text.length>0&&KeyPress.currentTarget.toString().indexOf("txtnumero")!=-1){
								txtnumdepto.setFocus();
							}
							if(txtobservaciones.text.length>0&&KeyPress.currentTarget.toString().indexOf("txtobservaciones")!=-1){
								
							}
							if(txtpiso.text.length>0&&KeyPress.currentTarget.toString().indexOf("txtpiso")!=-1){
								txtmanzana.setFocus();
							}
							if(txtsector.text.length>0&&KeyPress.currentTarget.toString().indexOf("txtsector")!=-1){
								txttorre.setFocus();
							}
							if(txttorre.text.length>0&&KeyPress.currentTarget.toString().indexOf("txttorre")!=-1){
								txtmonoblock.setFocus();
							}
							if(txttorre.text.length>0&&KeyPress.currentTarget.toString().indexOf("txtarea")!=-1){
								txtentrecalle.setFocus();
							}
							if (KeyPress.currentTarget.toString().indexOf("btnAddLocalidades")!=-1){
								cmborientacion.setFocus();
								if(btnAddLocalidades.enabled==true)
									btnAddLocalidades.enabled=false;
							
							}
							
							if (KeyPress.currentTarget.toString().indexOf("btnaddcalles")!=-1){
							
								cmbbarrios.setFocus();
								if(btnaddcalles.enabled==true)
									btnaddcalles.enabled=false;
								
							}
							
							if (KeyPress.currentTarget.toString().indexOf("btnaddbarrios")!=-1){
								txtnumero.setFocus();
								if(btnaddbarrios.enabled=true)
									btnaddbarrios.enabled=false;
								
							}
							if(KeyPress.currentTarget.toString().indexOf("cmborientacion")!=-1&&cmborientacion.text!=""){
								cmbcalles.setFocus();
							
							}
							if(KeyPress.currentTarget.toString().indexOf("cmbbarrios")!=-1){
								
								if(btnaddbarrios.enabled==false){
									btnaddbarrios.enabled=true;
									cmbbarrios.textInput.toString().toUpperCase();
									btnaddbarrios.setFocus();
								
								}else{
									if(btnaddbarrios.enabled==true)
										btnaddbarrios.enabled=false;
									else
										txtnumero.setFocus();
								}
								
							}
							if(KeyPress.currentTarget.toString().indexOf("cmbcalles")!=-1){
								if(btnaddcalles.enabled==false){
									btnaddcalles.enabled=true;
									cmbcalles.textInput.toString().toUpperCase();
									btnaddcalles.setFocus();
								
								}else{
									if(btnaddcalles.enabled==true)
										btnaddcalles.setFocus();
									else
										cmbbarrios.setFocus();
								}
								
							}
							
					
					
					}
			
			}
			
			//---------------------------------------------------------------------------------
			
			public function operation2_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				
				xmlLocalidades=new XMLList(event.result);
				
				cmbLocalidades.dataProvider=localidadeslist;
				
			
				
				if(idlocalidad==0){
					cmbLocalidades.selectedItemId=localidadeslist[localidadeslist.length-1].id;
					txtcodpostal.text=localidadeslist[localidadeslist.length-1].codigopostal;
				}else{
					cmbLocalidades.selectedItemId=idlocalidad;
					txtcodpostal.text=cmbLocalidades.selectedItem.codigopostal;
					
				}
				
				
				cmbLocalidades.setFocus();
			
				
			
				
			
				
			}
			
			public function operation2_faultHandler(event:FaultEvent):void
			{
				Alert.show("Error al Conectar al Servidor!!!");
				
			}
			
			protected function btnAddLocalidades_clickHandler(event:MouseEvent):void
			{
				
				
				if(txtcodpostal.text!=""&&cmbLocalidades.text.length>0){
					Alert.show("Desea la agregar Localidad "+cmbLocalidades.text.toUpperCase()+" ?","Confirmar OperaciÃ³n", Alert.YES | Alert.NO, this, agregarLocalidad, null, Alert.YES);
					//Alert.show(cmbLocalidades.text+"++"+cmbprovincias.selectedItem.id+"++"+txtcodpostal.text);
					
				
				}
				
				
				
			}
			//----------------------------------------------------------------------------------------------------------
			private function agregarLocalidad(evt:CloseEvent):void{
				if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
				wslocaliades.addLocalidadCompleto(cmbLocalidades.text,cmbprovincias.selectedItem.id,int(txtcodpostal.text));	
			
			}
			//----------------------------------------------------------------------------------------------------------
			
			protected function operationResultAddLocalidad(event:ResultEvent):void
			{
				var retorno:int=int(event.result.toString());
				
				switch(retorno){
					case 0:{
						Alert.show("NO PASÃ NADA!!!");
						localidadeslist=localidadeslistclone;
						cmbLocalidades.selectedItemId=15758;
						break;
					}
					
					case -6:{Alert.show("SE PRODUJO UN ERROR EN EL SERVIDOR!!!");
						localidadeslist=localidadeslistclone;
						cmbLocalidades.selectedItemId=15758;
						break;
					}
					default:{
						
						idlocalidad=retorno;
						wslocaliades.searchAllLocalidadesbyidprov(int(cmbprovincias.selectedItem.id));
						if(btnAddLocalidades.enabled==true)
							btnAddLocalidades.enabled=false;
					}
				
				}
				
				
				
			}
			
			protected function operationResultFaultAddLocalidad(event:FaultEvent):void
			{
				Alert.show("Error al Conectar al Servidor!!!");
				
			}
			
			protected function operation3_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				xmlBarrios=new XMLList(event.result);
			
				
				cmbbarrios.dataProvider=barrioslist;
				
				switch(idBarrio)
				{
					case 0:
					{
						cmbbarrios.selectedItemId=0;
						break;
					}
					
					default:
					{
						cmbbarrios.selectedItemId=idBarrio;
						break;
					}
				}
				
				
				
				cmbbarrios.setFocus();
				
				
				
			}
			
			protected function operation3_faultHandler(event:FaultEvent):void
			{
				Alert.show("Error al Conectar al Servidor!!!");
			}
			
			protected function operation4_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
			
				xmlCalles=new XMLList(event.result);
				cmbcalles.dataProvider=calleslist;
				
				switch(idCalle)
				{
					case 0:
					{
						cmbcalles.selectedItemId=0;
						break;
					}
						
					default:
					{
						cmbcalles.selectedItemId=idCalle;
						break;
					}
				}
				
				cmbcalles.setFocus();
				
			}
			
			protected function operation4_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				Alert.show("Error al Conectar al Servidor!!!");
				
			}
			
			protected function btnaddcalles_clickHandler(event:MouseEvent):void
			{
				if(cmbcalles.text!=""&&cmbcalles.text.length>0){
					Alert.show("Desea agregar la Calle "+cmbcalles.text.toUpperCase()+" ?","Confirmar OperaciÃ³n", Alert.YES | Alert.NO, this, agregarCalle, null, Alert.YES);
					
					
					
				}
				
			}
			
			protected function btnaddbarrios_clickHandler(event:MouseEvent):void
			{
				if(cmbbarrios.text.length>0){
					Alert.show("Desea la agregar el Barrio "+cmbbarrios.text.toUpperCase()+" ?","Confirmar OperaciÃ³n", Alert.YES | Alert.NO, this, agregarBarrio, null, Alert.YES);
					//Alert.show(cmbLocalidades.text+"++"+cmbprovincias.selectedItem.id+"++"+txtcodpostal.text);
					
					
				}
				
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			protected function agregarCalle(evt:CloseEvent):void{
				
				if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
				
				wscalles.addCalles(cmbcalles.text,0);//parameters street description and idOperator
			
			
			}
			protected function agregarBarrio(evt:CloseEvent):void{
			
				if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
				
				wsbarrios.addBarrio(cmbbarrios.text,0);//parameters barrio description and idOperator
			
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			
			protected function operation5_resultHandler(event:ResultEvent):void
			{
				var idCalles:int=int(event.result.toString());
				
				switch(idCalles)
				{
					case -5:
					{
						Alert.show("LA CALLE "+cmbcalles.text+" YA SE ENCUENTRA ALMACENADA!!!");
						break;
					}
					case -1:{
					
						Alert.show("SE PRODUJO UN ERROR EN EL SERVIDOR!!!");
							
						break;
					}	
						
					default:
					{
						idCalle=idCalles;
						wscalles.searchAllCalles();
						if(btnaddcalles.enabled=true)
							btnaddcalles.enabled=false;
						
						break;
					}
				}
				
			}
			
			protected function operation5_faultHandler(event:FaultEvent):void
			{
				Alert.show("FALLO LA OPERACION DE AGREGADO DE UN NOMBRE DE CALLE!!!");
				
			}
			
			protected function operation6_resultHandler(event:ResultEvent):void
			{
				var idBarrio1:int=int(event.result.toString());
				
				switch(idBarrio1)
				{
					case -4:
					{
						Alert.show("EL BARRIO DE NOMBRE "+cmbbarrios.text+" YA SE ENCUENTRA ALMACENADO!!!");
						
						break;
					}
					case -1:
					{
						Alert.show("SE PRODUJO UN ERROR EN EL SERVIDOR, VERIFIQUE!!!");
						break;
					}	
						
					default:
					{
						idBarrio=idBarrio1;
						wsbarrios.searchAllBarrios();
						if(btnaddbarrios==true)
							btnaddbarrios.enabled=false;
						break;
					}
				}
				
				
				
			}
			
			protected function operation6_faultHandler(event:FaultEvent):void
			{
				Alert.show("FALLO LA OPERACION DE AGREGADO DE UN NOMBRE DE BARRIO!!!");
				
			}
			
			//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			public function getDatosDomiciliosXML():String{
				if(txtarea.length==0)
					txtarea.text="NO INGRES";
				if(txtentrecalle.text.length==0)
					txtentrecalle.text="NO INGRESADO";
				if(txtmanzana.text.length==0)
					txtmanzana.text="NO INGRES";
				if(txtmonoblock.text.length==0)
					txtmonoblock.text="NO INGRES";
				if(txtpiso.text.length==0)
					txtpiso.text="NO INGRES";
				if(txtsector.text.length==0)
					txtsector.text="NO INGRES";
				if(txttorre.text.length==0)
					txttorre.text="NO INGRES";
				if(txtnumdepto.text.length==0)
					txtnumdepto.text="0";
				if(txtnumero.length==0)
					txtnumero.text="0";
				
				var xmlDomiclio:String=
					"<Domicilio>\n"+
					   "<domicilioId>0</domicilioId>\n"+
						"<piso>"+txtpiso.text+"</piso>\n"+
						"<manzana>"+txtmanzana.text+"</manzana>\n"+
						"<entrecalleycalle>"+txtentrecalle.text+"</entrecalleycalle>\n"+
						"<sector>"+txtsector.text+"</sector>\n"+
						"<torre>"+txttorre.text+"</torre>\n"+
						"<monoblock>"+txtmonoblock.text+"</monoblock>\n"+
						"<barrios>\n"+
							"<barrioId>"+cmbbarrios.selectedItemId+"</barrioId>\n"+
						"</barrios>\n"+
						"<calles>\n"+
							"<calleId>"+cmbcalles.selectedItemId+"</calleId>\n"+
						"</calles>\n"+
						"<area>"+txtarea.text+"</area>\n"+
						"<orientacion>\n"+
							"<idOrientacion>"+cmborientacion.selectedItemId+"</idOrientacion>\n"+
						"</orientacion>\n"+
						"<numero>"+txtnumero.text+"</numero>\n"+
						"<numdepto>"+txtnumdepto.text+"</numdepto>\n"+
						"<localidad>\n"+
							"<idlocalidad>"+cmbLocalidades.selectedItemId+"</idlocalidad>\n"+
							"<idProvincia>"+cmbprovincias.selectedItemId+"</idProvincia>\n"+
							"<codigoPostal>"+txtcodpostal.text+"</codigoPostal>\n"+
						"</localidad>\n"+
						"<det1ails_homes>"+txtobservaciones.text+"</det1ails_homes>\n"+
					"</Domicilio>\n";		
			
			return xmlDomiclio;
			
			}
			//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			public function validateForm():Boolean{
				
				var validatorArray:Array=new Array();
						validatorArray.push(numeroValid);
						validatorArray.push(codpostalvalid);			
				var validatorErrorArray:Array = Validator.validateAll(validatorArray);
				var isValidForm:Boolean = validatorErrorArray.length == 0;                
				return isValidForm
				
				
			}
			//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			
			
			
			
			
			
			
			
			
		]]>
	</fx:Script>
	
	<components:AdvancedAutoComplete id="cmbprovincias" x="10" y="20" width="213"
									 allowDuplicates="false" allowNewValues="false" fontSize="16"
									 labelField="descripcion" matchType="beginning" >
	</components:AdvancedAutoComplete>
	<s:Label x="10" y="7" fontSize="16" text="Provincias"/>
	<components:AdvancedAutoComplete id="cmbLocalidades" x="231" y="20" width="340"
									 allowNewValues="true" fontSize="16" labelField="descripcion"
									 matchType="beginning">
	</components:AdvancedAutoComplete>
	<s:Label x="231" y="6" fontSize="16" text="Localidades"/>
	<components:AdvancedAutoComplete id="cmborientacion" x="11" y="68" width="212" fontSize="16" 
									 labelField="DESCRIPCION" matchType="beginning">
	</components:AdvancedAutoComplete>
	<s:Label x="10" y="53" fontSize="16" text="Orientacion"/>
	<s:Label x="578" y="9" fontSize="16" text="Cod.Postal"/>
	<controls:MaskedTextInput id="txtcodpostal" x="579" y="22" width="95" height="25" fontSize="16"
							  maxChars="10" required="true" restrict="0-9 a-z A-Z -_"/>
	<s:Button id="btnAddLocalidades" x="678" y="26" width="36" label="+"
			  click="btnAddLocalidades_clickHandler(event)" enabled="false"
			  toolTip="Agregar Una Localidad"/>
	<controls:MaskedTextInput id="txtpiso" x="220" y="116" width="65" fontSize="16" maxChars="10"
							  restrict="0-9 a-z A-Z -_"/>
	<s:Label x="223" y="102" fontSize="16" text="Piso"/>
	<s:Label x="232" y="53" fontSize="16" text="Calles"/>
	<controls:MaskedTextInput id="txtmanzana" x="289" y="116" width="60" fontSize="16" maxChars="10"
							  restrict="0-9 a-z A-Z -_"/>
	<controls:MaskedTextInput id="txtsector" x="356" y="116" width="64" fontSize="16" maxChars="10"
							  restrict="0-9 a-z A-Z -_"/>
	<controls:MaskedTextInput id="txttorre" x="428" y="116" width="63" fontSize="16" maxChars="10"
							  restrict="0-9 a-z A-Z -_"/>
	<controls:MaskedTextInput id="txtmonoblock" x="497" y="117" width="59" fontSize="16"
							  maxChars="10" restrict="0-9 a-z A-Z -_"/>
	<s:Label x="286" y="101" fontSize="16" text="Manzana"/>
	<s:Label x="355" y="101" fontSize="16" text="Sector"/>
	<s:Label x="426" y="103" fontSize="16" text="Torre"/>
	<s:Label x="496" y="104" fontSize="16" text="Monoblock"/>
	<components:AdvancedAutoComplete id="cmbcalles" x="231" y="68" width="260" allowNewValues="true"
									 fontSize="16" labelField="nombre" matchType="beginning">
	</components:AdvancedAutoComplete>
	<components:AdvancedAutoComplete id="cmbbarrios" x="540" y="68" width="231" allowNewValues="true"
									 fontSize="16" labelField="nombre" matchType="beginning">
	</components:AdvancedAutoComplete>
	<s:Label x="540" y="53" fontSize="16" text="Barrios"/>
	<s:Button id="btnaddcalles" x="495" y="71" width="30" label="+"
			  click="btnaddcalles_clickHandler(event)" enabled="false"/>
	<s:Button id="btnaddbarrios" x="775" y="71" width="29" label="+"
			  click="btnaddbarrios_clickHandler(event)" enabled="false"/>
	<s:TextInput id="txtentrecalle" x="12" y="157" width="214" fontSize="16" maxChars="255"
					   restrict="A-ÃZa-Ã±z " skinClass="spark.skins.spark.TextInputSkin"
					   styleName="textInput" prompt="Ingrese Ubicacion Entre calles..."/>
	<s:Label x="13" y="143" fontSize="16" text="Entre Calle y Calle"/>
	<controls:MaskedTextInput id="txtnumero" x="37" y="116" width="98" fontSize="16" maxChars="10"
							  required="true" restrict="0-9" styleName="textInput"/>
	<s:Label x="38" y="100" fontSize="16" text="Numero"/>
	<controls:MaskedTextInput id="txtnumdepto" x="147" y="116" width="68" fontSize="16" maxChars="10"
							  restrict="0-9 a-z A-Z -_"/>
	<s:Label x="142" y="102" fontSize="16" text="Num Depto"/>
	<s:TextArea id="txtobservaciones" x="236" y="157" width="568" height="128" fontSize="16"
				maxChars="5000" restrict="A-ÃZa-Ã±z 0-9()/?"
				skinClass="spark.skins.spark.TextAreaSkin" styleName="textInput" prompt="Ingrese Observaciones..."/>
	<s:Label x="236" y="143" fontSize="16" text="Observaciones"/>
	<controls:MaskedTextInput id="txtarea" x="576" y="117" width="67" fontSize="16" maxChars="10"/>
	<s:Label x="577" y="104" fontSize="16" text="Area"/>
	
	
	
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<fx:XML xmlns="" id="orientaciones">
			
			<Orientaciones>
				<Orientacion>
					<id>1</id>
					<DESCRIPCION>NORTE</DESCRIPCION>							
				</Orientacion>
				<Orientacion>
					<id>2</id>
					<DESCRIPCION>SUR</DESCRIPCION>
				</Orientacion>
				<Orientacion>
					<id>3</id>
					<DESCRIPCION>ESTE</DESCRIPCION>
				</Orientacion>
				<Orientacion>
					<id>4</id>
					<DESCRIPCION>OESTE</DESCRIPCION>
				</Orientacion>
				<Orientacion>
					<id>5</id>
					<DESCRIPCION>NO SELECCIONADO</DESCRIPCION>
				</Orientacion>
			</Orientaciones>
			
			
			
			
		</fx:XML>
		<s:XMLListCollection id="orientlist" source="{orientaciones.Orientacion}"/>
		<s:XMLListCollection id="provinciaslist" source="{xmlProvincias.provincia}"/>
		<s:XMLListCollection id="localidadeslist" source="{xmlLocalidades.localidades}"/>
		<s:XMLListCollection id="localidadeslistclone" source="{xmlLocalidades.localidades}"/>
		<s:XMLListCollection id="barrioslist" source="{xmlBarrios.item}"/>
		<s:XMLListCollection id="calleslist" source="{xmlCalles.item}"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:WebService id="serviceProvincias" wsdl="http://192.168.1.100:8080/ServiceProvincias/ProvinciasWs?WSDL" showBusyCursor="true">
			<s:operation name="searchAllProvincias" result="operation1_resultHandler(event)" fault="operation1_faultHandler(event)">
				
			</s:operation>
		
		</s:WebService>
		<s:WebService id="wslocaliades" wsdl="http://192.168.1.100:8080/ServicesLocalidades/LocalidadesWs?WSDL" showBusyCursor="true">
			<s:operation name="searchAllLocalidadesbyidprov" result="operation2_resultHandler(event)" fault="operation2_faultHandler(event)">
				
			</s:operation>
			<s:operation name="addLocalidadCompleto" result="operationResultAddLocalidad(event)" fault="operationResultFaultAddLocalidad(event)">
				
			</s:operation>
			
		</s:WebService>
		<s:WebService id="wsbarrios" wsdl="http://192.168.1.100:8080/ServiceBarrios/BarriosWs?WSDL" showBusyCursor="true">
			<s:operation name="searchAllBarrios" result="operation3_resultHandler(event)" fault="operation3_faultHandler(event)">
				
			</s:operation>
			<s:operation name="addBarrio" result="operation6_resultHandler(event)" fault="operation6_faultHandler(event)">
				
			</s:operation>
		</s:WebService>
		<s:WebService wsdl="http://192.168.1.100:8080/ServicesCalles/CallesWs?wsdl" id="wscalles" showBusyCursor="true">
			<s:operation name="searchAllCalles" result="operation4_resultHandler(event)" fault="operation4_faultHandler(event)">
				
			</s:operation>
			<s:operation name="addCalles" result="operation5_resultHandler(event)" fault="operation5_faultHandler(event)">
				
			</s:operation>
		</s:WebService>
		<mx:NumberValidator id="numeroValid" source="{txtnumero}" minValue="0" maxValue="999999" required="true">
			
		</mx:NumberValidator>
		<mx:NumberValidator id="codpostalvalid" source="{txtcodpostal}" required="true">
			
		</mx:NumberValidator>
	</fx:Declarations>
</s:Group>
