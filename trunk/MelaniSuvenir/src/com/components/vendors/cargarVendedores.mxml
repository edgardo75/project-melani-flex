<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:controls="com.adobe.flex.extras.controls.*"
		 xmlns:components="com.hillelcoren.components.*"
		 width="722" height="534" creationComplete="group1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.actions.Employee;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			import popus.PopupUsuarioHabilitado;
			import popus.popupUsuario;
			
			[Bindable]
			private var listEmpleados:XMLList;
			[Bindable]
			public var listEmployee:ArrayCollection;
			
			private var so:SharedObject=SharedObject.getLocal("userData");
			
			protected function operationAddEmpleadosFulltime1_resultHandler(event:ResultEvent):void
			{
				var iresult:int=int(event.result);
				switch(iresult)
				{
					case 0:
					{
						Alert.show("NO PASÓ NADA!!!");
						if(btnguardar.enabled==false)
							btnguardar.enabled=true;
						break;
					}
					case -1:{
						Alert.show("SE PRODUJO UN ERROR AL ALMACENAR UN EMPLEADO REVISE!!!");
						if(btnguardar.enabled==false)
							btnguardar.enabled=true;
						break;
					}	
					case -2:{
						Alert.show("YA EXISTE UNA PERSONA CON ESE DOCUMENTO!!!");
						if(btnguardar.enabled==false)
							btnguardar.enabled=true;
						break;
					}	
					case -4:{
						Alert.show("YA EXISTE ESE EMAIL EN LA BASE DE DATOS!!!");
						if(btnguardar.enabled==false)
							btnguardar.enabled=true;
						break;
					}	
					case -3:{
						Alert.show("SE PRODUJO UN ERROR EN EL SERVIDOR REVISE!!!");
						if(btnguardar.enabled==false)
							btnguardar.enabled=true;
						break;
					}
					case -6:{
						Alert.show("EL NOMBRE DE USUARIO YA EXISTE EN LA BASE DE DATOS");
						if(btnguardar.enabled==false)
							btnguardar.enabled=true;
						break;
					}	
						
					default:
					{
						limpiarcontroles();
						wsempleado.selectAllEmpleados();
						break;
					}
				}
				
			}
			
			protected function operation1AddEmpladosFullTime_faultHandler(event:FaultEvent):void
			{
				Alert.show("SE PRODUJO UN ERROR AL ALMACENAR EMPLEADO PARTIME");
				
			}
			
			protected function operationAddEmpleadosPartime1_resultHandler(event:ResultEvent):void
			{
				
				var iresult:int=int(event.result);
				
				switch(iresult)
				{
					case 0:
					{
						Alert.show("NO PASÓ NADA!!!");
						break;
					}
					case -1:{
						Alert.show("SE PRODUJO UN ERROR AL ALMACENAR UN EMPLEADO REVISE!!!");
						break;
					}	
					case -2:{
						Alert.show("YA EXISTE UNA PERSONA CON ESE DOCUMENTO!!!");
						break;
					}
					case -4:{
						Alert.show("YA EXISTE ESE EMAIL EN LA BASE DE DATOS!!!");
						break;
					}	
					case -3:{
						Alert.show("SE PRODUJO UN ERROR EN EL SERVIDOR REVISE!!!");
						break;
					}
					case -6:{
						Alert.show("EL NOMBRE DE USUARIO YA EXISTE EN LA BASE DE DATOS");
						break;
					}	
						
					default:
					{
						limpiarcontroles();
						wsempleado.selectAllEmpleados();
						break;
					}
				}
				
			}
			
			protected function operationAddEmpleadosPartime1_faultHandler(event:FaultEvent):void
			{
				Alert.show("SE PRODUJO UN ERROR AL ALMACENAR DATOS DE EMPLEADO");
				
			}
			
			
			protected function operationSelectAllEmpleados_resultHandler(event:ResultEvent):void
			{
				
				listEmpleados=new XMLList(event.result);
				var employee:Employee;
				
				
					listEmployee=new ArrayCollection();
				
				for(var i:int=0;i<xmllistEmpleados.length;i++){	
					employee=new Employee();
					employee.id=xmllistEmpleados[i].id;
					employee.apellido=String(xmllistEmpleados[i].apellido).toUpperCase();
					employee.nombre=String(xmllistEmpleados[i].nombre).toUpperCase();
					employee.nameuser=xmllistEmpleados[i].nameuser;
					employee.clave=xmllistEmpleados[i].clave;
					if(String(xmllistEmpleados[i].estado)=="1")
						employee.estado=true;
					
					
						
					
					listEmployee.addItem(employee);
					
				
				
				
				}
				
				listEmployee.refresh();
				
				if(listEmployee.length>0 && btndeshabilitar.enabled==false||btnhabilitar.enabled==false){
					btndeshabilitar.enabled=true;
					btnhabilitar.enabled=true;
				}
				
			}
			
			protected function operationselectAllEmpleados_faultHandler(event:FaultEvent):void
			{
				Alert.show("Se PRODUJO UN ERROR AL TRAER LA LISTA DE EMPLEADOS");
				
			}
			
			protected function operationdesabilitarEmpleado_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function operationDesabilitarEmpleado1_faultHandler(event:FaultEvent):void
			{
				Alert.show("SE PRODUJO UN ERROR EN EL SERVIDOR AL DESHABILITAR EMPLEADO");
				
			}
			
			protected function btnnuevo_clickHandler(event:MouseEvent):void
			{
				if(txtnombre.text.length>0)
					limpiarcontroles();
				txtnombre.setFocus();
				
				
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			public function validateForm():Boolean{
				var validatorArray:Array=new Array();
				validatorArray.push(emV);
				validatorArray.push(apeV);
				validatorArray.push(nomV);
				validatorArray.push(txtdocumento);
				validatorArray.push(cmbTiposdocu);
				validatorArray.push(cmbGeneros);
				validatorArray.push(nomuserV);
				validatorArray.push(passV);
				validatorArray.push(passreV);
				validatorArray.push(msksalario);
				validatorArray.push(msksalarioxhora);
				
				
				var validatorErrorArray:Array = Validator.validateAll(validatorArray);
				var isValidForm:Boolean = validatorErrorArray.length == 0;                
				return isValidForm
				
				
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				
				cmbGeneros.selectedItemId=2;
				cmbTiposdocu.selectedItemId=3;
				
				txtapellido.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				txtdocumento.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				txtemail.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				txtnameuser.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				txtnombre.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				txtobservaciones.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				txtpassword.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				txtrepassword.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				msksalario.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				msksalarioxhora.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				cmbTiposdocu.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				cmbGeneros.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				btnguardar.addEventListener(KeyboardEvent.KEY_UP,tranferirFocus);
				
				wsempleado.selectAllEmpleados();
				
				so.clear();
				
				
			}
			
			private function tranferirFocus(keyPress:KeyboardEvent):void{
				if (keyPress.keyCode==Keyboard.ENTER){
					
						if(keyPress.currentTarget.toString().indexOf("txtnombre")!=-1){
							txtapellido.setFocus();
							return;
						}
						if(keyPress.currentTarget.toString().indexOf("txtapellido")!=-1){
							txtemail.setFocus();
							return;
						}
						if(keyPress.currentTarget.toString().indexOf("txtemail")!=-1){
							cmbTiposdocu.setFocus();
							return;
						}
						
						if(keyPress.currentTarget.toString().indexOf("cmbTiposdocu")!=-1){
							txtdocumento.setFocus();
							return;
						}
						if(keyPress.currentTarget.toString().indexOf("txtdocumento")!=-1){
							cmbGeneros.setFocus();
							return;
						}
						if(keyPress.currentTarget.toString().indexOf("cmbGeneros")!=-1){
							txtnameuser.setFocus();
							return;
						}
						if(keyPress.currentTarget.toString().indexOf("txtnameuser")!=-1){
							txtpassword.setFocus();
							return;
						}
						if(keyPress.currentTarget.toString().indexOf("txtpassword")!=-1){
							txtrepassword.setFocus();
							return;
						}
						if(keyPress.currentTarget.toString().indexOf("txtrepassword")!=-1){
							if(msksalario.visible==true)
								msksalario.setFocus();
							else{
								if(msksalarioxhora.visible==true)
									msksalarioxhora.setFocus();
							}	
							return;
						}
						
						if(keyPress.currentTarget.toString().indexOf("msksalario")!=-1&&msksalario.visible==true){
								btnguardar.setFocus();
								return;
						
						}
						if(keyPress.currentTarget.toString().indexOf("msksalarioxhora")!=-1&&msksalarioxhora.visible==true){
							btnguardar.setFocus();
							return;
							
						}
						
				
				}
			
			}
			
			protected function enabledisableradiobutton():void
			{
				if(rbempleadofull.selected==true){
						labelsalariofull.visible=true;
						msksalario.visible=true;
						labelsalariopart.visible=false;
						msksalarioxhora.visible=false;
						
				}else{
					if(rbempleadopart.selected==true){
						labelsalariofull.visible=false;
						msksalario.visible=false;
						labelsalariopart.visible=true;
						msksalarioxhora.visible=true;
					
					}
				
				}
			}
			protected function limpiarcontroles():void{
				
				txtapellido.text="";
				txtdocumento.text="";
				txtemail.text="";
				txtnameuser.text="";
				txtnombre.text="";
				txtobservaciones.text="";
				txtpassword.text="";
				txtrepassword.text="";
				msksalario.text="";
				msksalarioxhora.text="";
				cmbGeneros.selectedItemId=2;
				cmbTiposdocu.selectedItemId=3;
				
				if(btnguardar.enabled==false)
					btnguardar.enabled=true;
				
				
				
			
			
			}
			protected function guardarEmpleado(evt:CloseEvent):void{
				if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
				
				
				if(txtpassword.text!=txtrepassword.text){
					Alert.show("LOS PASSWORD NO COINCIDEN, CORRIJA!!!");
					return;
				}
				if(txtapellido.text.length<2||txtnameuser.text.length<2||txtnombre.text.length<2){
					Alert.show("LOS NOMBRES, NOMBRE DE USUARIO Y APELLIDO DEBEN SER DE POR LO MENOS 2 CARACTERES");
					return;
				}
				
				
				if(btnguardar.enabled==true)
					btnguardar.enabled=false;	
				
				
				if(rbempleadofull.selected==true){
					if(msksalario.text.length==0)
						msksalario.text="0";	
						wsempleado.addEmpleadoFullTime(txtapellido.text,txtnameuser.text,txtnombre.text,txtpassword.text,txtrepassword.text,txtemail.text,int(cmbTiposdocu.selectedItem.id),int(txtdocumento.text),Number(msksalario.text).toFixed(2),int(cmbGeneros.selectedItem.id),txtobservaciones.text);
					
				}else{
					if(rbempleadopart.selected==true){
						if(msksalarioxhora.text.length==0)
							msksalarioxhora.text="0";
						wsempleado.addEmpleadoParttime(txtapellido.text,txtnameuser.text,txtnombre.text,txtpassword.text,txtrepassword.text,txtemail.text,int(cmbTiposdocu.selectedItem.id),int(txtdocumento.text),Number(msksalarioxhora.text),int(cmbGeneros.selectedItem.id),txtobservaciones.text);
					}
				}
				
				
			
			}
			protected function btnguardar_clickHandler(event:MouseEvent):void
			{
			
				Alert.show("Desea Guardar Datos de Empleado?","Confirmar Operación", Alert.YES | Alert.NO, this, guardarEmpleado, null, Alert.NO);
				
			}
			

			protected function rbempleadopart_clickHandler(event:MouseEvent):void
			{
				enabledisableradiobutton();
			}
			
			protected function rbempleadofull_clickHandler(event:MouseEvent):void
			{
				enabledisableradiobutton();
			}
			
			
			
			
			

			protected function btndeshabilitar_clickHandler(event:MouseEvent):void
			{
				if(dgemployee.selectedItem.estado==false){
				
						var popup:popupUsuario=popupUsuario(PopUpManager.createPopUp(this,popupUsuario,true));
						
						popup.title="Usuario y Clave";
						popup.arrayEmployee=listEmployee;
						popup.userSelected=dgemployee.selectedItem.nameuser;
						popup.userPassSelected=dgemployee.selectedItem.clave;
						popup.userIdSelected=dgemployee.selectedItem.id;
						popup.userEstadoSelected=xmllistEmpleados[dgemployee.selectedIndex].estado;
						
						
						PopUpManager.centerPopUp(popup);
				
				}else
					Alert.show("DEBE SELECCIONAR UN EMPLEADO DE LA GRILLA O LISTADO CON EL ESTADO SIN CHEQUEAR");
			}
			
			protected function btnhabilitar_clickHandler(event:MouseEvent):void
			{
				if(dgemployee.selectedItem.estado==true){
					var popup:PopupUsuarioHabilitado=PopupUsuarioHabilitado(PopUpManager.createPopUp(this,PopupUsuarioHabilitado,true));
					popup.title="Usuario y Clave";
					popup.arrayEmployee=listEmployee;
					popup.userSelected=dgemployee.selectedItem.nameuser;
					popup.userPassSelected=dgemployee.selectedItem.clave;
					popup.userIdSelected=dgemployee.selectedItem.id;
					popup.userEstadoSelected=xmllistEmpleados[dgemployee.selectedIndex].estado;
					
					
					PopUpManager.centerPopUp(popup);
				}else
					Alert.show("DEBE SELECCIONAR UN EMPLEADO DE LA GRILLA O LISTADO CON EL ESTADO CHEQUEADO");
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:WebService id="wsempleado" wsdl="http://localhost:8080/ServicesEmpleados/EmpleadosWs?WSDL" showBusyCursor="true">
			<s:operation name="addEmpleadoFullTime"
						 result="operationAddEmpleadosFulltime1_resultHandler(event)"
						 fault="operation1AddEmpladosFullTime_faultHandler(event)"
						 >
				
			</s:operation>
			<s:operation name="addEmpleadoParttime"
						 result="operationAddEmpleadosPartime1_resultHandler(event)"
						 fault="operationAddEmpleadosPartime1_faultHandler(event)">
				
			</s:operation>
			<s:operation name="selectAllEmpleados"
						 result="operationSelectAllEmpleados_resultHandler(event)"
						 fault="operationselectAllEmpleados_faultHandler(event)">
				
			</s:operation>
			<s:operation name="deshabilitarEmpleado"
						 result="operationdesabilitarEmpleado_resultHandler(event)"
						 fault="operationDesabilitarEmpleado1_faultHandler(event)">
				
			</s:operation>
		</s:WebService>
		<s:XMLListCollection id="xmllistEmpleados" source="{listEmpleados.item}"/>
		<mx:XMLListCollection id="xmlListTiposDocu" source="{xmlTiposdocu.Tipo}"/>
		<mx:XMLListCollection id="xmlListGeneros" source="{xmlGeneros.Genero}"/>
		<mx:EmailValidator id="emV" source="{txtemail}" property="text"					   
						   required="false" invalidCharError="La dirección de email contiene caracteres inválidos!!!"
						   tooManyAtSignsError="La dirección de email contiene muchos caracteres!!!"
						   invalidDomainError="Dominio de la dirección de email incorrecto" invalidIPDomainError="Mensaje de error cuando el dominio de IP no es válido. El dominio IP debe estar encerrado entre corchetes." 
						   />
		
		
		<mx:StringValidator id="apeV" source="{txtapellido}"
							property="text" minLength="2" maxLength="30"
							required="true" requiredFieldError="Debe Ingresar el Apellido"/>	
		
		<mx:StringValidator id="nomV" source="{txtnombre}" 
							property="text" minLength="2" maxLength="30"
							required="true" requiredFieldError="Debe Ingresar el Nombre"/>
		<mx:StringValidator id="passV" source="{txtpassword}" 
							property="text" minLength="4" maxLength="8"
							required="true" requiredFieldError="Debe Ingresar Password"/>
		<mx:StringValidator id="passreV" source="{txtrepassword}" 
							property="text" minLength="4" maxLength="8"
							required="true" requiredFieldError="Debe Reingresar el Password"/>
		<mx:StringValidator id="nomuserV" source="{txtnameuser}" 
							property="text" minLength="2" maxLength="10"
							required="true" requiredFieldError="Debe Ingresar el Nombre de Usuario"/>
		
		
	
		<fx:XML format="e4x" id="xmlTiposdocu">
			<TiposDocumentos>
				<Tipo>
					<descripcion>DNI</descripcion>
					<id>3</id>
				</Tipo>
				<Tipo>
					<descripcion>LC</descripcion>
					<id>2</id>
				</Tipo>
				<Tipo>
					<descripcion>LE</descripcion>
					<id>1</id>
				</Tipo>   
				<Tipo>
					<descripcion>PASAPORTE</descripcion>
					<id>4</id>
				</Tipo>			 
			</TiposDocumentos>	
		</fx:XML>
		<fx:XML format="e4x" id="xmlGeneros">
			<Generos>
				<Genero>
					<id>1</id>
					<descripcion>M</descripcion>
				</Genero>
				<Genero>
					<id>2</id>
					<descripcion>F</descripcion>
				</Genero>
			</Generos>			
		</fx:XML>	
		<s:RadioButtonGroup id="rdgroupEmpleados"/>
	</fx:Declarations>

	
	<s:DataGrid id="dgemployee" x="48" y="30" width="634" height="148"
				alternatingRowColors="[#95efdf, #d9e1dd]" dataProvider="{listEmployee}"
				fontFamily="Verdana" fontSize="16" requestedRowCount="4" selectionMode="singleRow">

		<s:columns>
			<s:ArrayList>

				<s:GridColumn dataField="id" headerText="ID" visible="false"></s:GridColumn>
				<s:GridColumn dataField="nombre" headerText="Nombre"></s:GridColumn>
				<s:GridColumn dataField="apellido" headerText="Apellido"></s:GridColumn>
				<s:GridColumn dataField="nameuser" headerText="Usuario"></s:GridColumn>
				<s:GridColumn dataField="clave" headerText="Clave" visible="false"></s:GridColumn>
				<s:GridColumn dataField="estado" headerText="Estado" rendererIsEditable="true">
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								<mx:CheckBox horizontalCenter="0" click="data.estado=!data.estado" verticalCenter="0" width="90%" selected="{data.estado}"/>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				
				</s:GridColumn>
				


				

			</s:ArrayList>
		</s:columns>		
	</s:DataGrid>
	<s:Label x="179" y="10" color="#ADF2C7" fontFamily="Verdana" fontSize="16" fontWeight="bold"
			 text="CARGA DE EMPLEADOS PARA OPERAR EL SISTEMA" textAlign="center"/>
	<s:Label x="27" y="190" fontSize="20" fontWeight="bold" text="Nombre:"/>
	<s:TextInput id="txtnombre" x="109" y="186" width="214" fontSize="16"
				 prompt="ingrese su nombre propio...."/>
	<s:Label x="331" y="191" fontSize="20" fontWeight="bold" text="Apellido:"/>
	<s:TextInput id="txtapellido" x="419" y="183" width="164" fontSize="16"
				 prompt="ingrese su apellido"/>
	<s:Label x="28" y="216" fontSize="20" fontWeight="bold" text="Email:"/>
	<s:TextInput id="txtemail" x="108" y="212" width="214" fontSize="16"
				 prompt="ingrese direccion de email que mas use..."/>
	<s:Label x="330" y="214" color="#033339" fontSize="20" text="Tipo:"/>
	<s:Label x="28" y="240" width="112" height="22" color="#033339" fontSize="20" text="Documento:"/>
	<controls:MaskedTextInput id="txtdocumento" x="137" y="239" width="87"
							   fontFamily="Verdana"
							  fontSize="16" fontWeight="bold" inputMask="########" maxChars="8"
							  restrict="0-9" 
							  toolTip="Ingrese el Número de Documento!!!" required="true"/>
	<components:AdvancedAutoComplete id="cmbTiposdocu" x="420" y="206" width="99"
									 allowDuplicates="false" allowEditingNewValues="false"
									 allowEditingSelectedValues="false"
									 allowMultipleSelection="false" allowNewValues="false"
									 backspaceAction="remove" dataProvider="{xmlListTiposDocu}"
									 fontFamily="Verdana" fontSize="16" fontWeight="bold"
									 labelField="descripcion" matchType="beginning" tabIndex="0"
									 toolTip="Seleccione el Tipo de Documento!!!"
									 verticalScrollPolicy="on">
	</components:AdvancedAutoComplete>
	<s:Label x="330" y="239" color="#033339" fontSize="20" text="Genero:"/>
	<components:AdvancedAutoComplete id="cmbGeneros" x="421" y="235" width="53"
									 allowDuplicates="false" allowEditingNewValues="false"
									 allowEditingSelectedValues="false"
									 allowMultipleSelection="false" allowNewValues="false"
									 backspaceAction="remove" dataProvider="{xmlListGeneros}"
									 fontFamily="Verdana" fontSize="16" fontWeight="bold"
									 labelField="descripcion" matchType="beginning" tabIndex="4"
									 toolTip="Seleccione el Genero del Cliente M o F!!!"
									 verticalScrollPolicy="on">
	</components:AdvancedAutoComplete>
	<s:Label x="29" y="353" color="#033339" fontSize="20" text="Observaciones:"/>
	<s:TextArea id="txtobservaciones" x="28" y="377" width="504" height="96" fontFamily="Verdana"
				fontSize="16" fontWeight="bold" maxChars="255" tabIndex="6"/>
	<s:Button id="btnnuevo" x="28" y="481" height="31" label="Nuevo"
			  click="btnnuevo_clickHandler(event)" fontSize="16"/>
	<s:Button id="btnguardar" x="106" y="481" height="30" label="Guardar"
			  click="btnguardar_clickHandler(event)" fontSize="16"/>
	
	<s:Label id="labelsalariofull" x="403" y="344" width="149" fontSize="20" text="Salario Mensual:"/>
	<s:Label id="labelsalariopart" x="403" y="340" width="169" fontSize="20" text="Salario por Hora:" visible="false"/>
	<controls:MaskedTextInput id="msksalario" x="551" y="335" height="30" fontSize="16"
							  restrict="0-9."/>
	<controls:MaskedTextInput id="msksalarioxhora" x="559" y="336" height="30" fontSize="20" restrict="0-9." visible="false"/>
	
	
	<s:Label x="28" y="285" fontSize="20" fontWeight="bold" text="Usuario:"/>
	<s:TextInput id="txtnameuser" x="111" y="282" width="210" fontSize="16" maxChars="10"
				 prompt="ingrese un nombre de usuario"/>
	<s:Label x="330" y="285" fontSize="20" fontWeight="bold" text="Password:"/>
	<s:Label x="329" y="304" fontSize="20" fontWeight="bold" text="Repassword:"/>
	<s:TextInput id="txtpassword" x="457" y="278" displayAsPassword="true" fontSize="16"
				 prompt="ingrese password...."/>
	<s:TextInput id="txtrepassword" x="457" y="303" displayAsPassword="true" fontSize="16"
				 prompt="reingreso password"/>
	<s:VGroup x="252" y="327" >
	<s:RadioButton id="rbempleadofull" x="250" y="339" label="Empleado FullTime"
				   groupName="rdgroupEmpleados" selected="true" click="rbempleadofull_clickHandler(event)"/>
	<s:RadioButton id="rbempleadopart" x="250" y="357" label="Empleado PartTime" 
				   click="rbempleadopart_clickHandler(event)" groupName="rdgroupEmpleados"/>
	</s:VGroup>
	<s:Button id="btndeshabilitar" x="191" y="481" height="30" label="Deshabilitar"
			  click="btndeshabilitar_clickHandler(event)" enabled="false" fontSize="16"
			  toolTip="Deshabilita un empleado para poder operar el Sistema"/>
	<s:Button id="btnhabilitar" x="300" y="481" height="30" label="Habilitar"
			  click="btnhabilitar_clickHandler(event)" enabled="false" fontSize="16"
			  toolTip="Habilita un empleado para poder operar el Sistema"/>
	
</s:Group>








