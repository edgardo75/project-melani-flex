<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="1028" height="534" creationComplete="group1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.actions.CabeceraNota;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var indexPage:int=0;
			[Bindable]
			private static var SIZEPAGE:int=100;
			[Bindable]
			private var totalReg:int=0;
			[Bindable]
			private static var TOTALPAGES:int=0;
			[Bindable]
			private var pageEnum:int=0;
			[Bindable]
			private var xmlNotas:XMLList;
			[Bindable]
			private var listNotas:ArrayCollection;
			
			protected function operation1_resultHandler(event:ResultEvent):void
			{
				totalReg = int(event.result.toString());
				
				if(totalReg==0){
					Alert.show("NO HAY NOTAS CARGADAS AÃšN!!!");
				}else{
					
					if(totalReg<100)
						wsnotas.selectAllNotas();
					else{
						last_btn.enabled=true;
						next_btn.enabled=true;
						first_btn.enabled=true;
						prev_btn.enabled=true;
						TOTALPAGES=int(totalReg/SIZEPAGE);		
						
						wsnotas.verNotasPedidoPaginadas(indexPage,SIZEPAGE);
					}
				
				}
				
			}
			
			protected function operation1_faultHandler(event:FaultEvent):void
			{
				Alert.show("ERROR AL BUSCAR CANTIDAD TOTAL DE NOTAS DE PEDIDO EN BASE DE DATOS");
			}
			
			protected function operation2_resultHandler(event:ResultEvent):void
			{
				
				xmlNotas=new XMLList(event.result);
				
				addgrid();
			}
			
			//----------------------------------------------------------------------------------------------
			private function addgrid():void{
				
				var headerNota:CabeceraNota;
				adgNotas.dataProvider=notas;
				
				
				
				
				
				
				
				
				

				if(detallenotas.length>0)
					detallenotas.removeAll();
				
				/*if(btnExportar.enabled==false)	
					btnExportar.enabled=true;
				if(btnImprimir.enabled==false)
					btnImprimir.enabled=true;
				if(btnRegargarlistado.enabled==true)
					btnRegargarlistado.enabled=false;*/
				
				
				
			}
			//---------------------------------------------------------------------------------
			
			protected function operation2_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function first_clickHandler(event:MouseEvent):void
			{
				if(indexPage==0){
					first_btn.enabled=false;
					prev_btn.enabled=false;
					last_btn.enabled=true;
					next_btn.enabled=true;
				}else{
					indexPage=0;
					wsnotas.verNotasPedidoPaginadas(indexPage,SIZEPAGE);
					first_btn.enabled=false;
					prev_btn.enabled=false;
					last_btn.enabled=true;
					next_btn.enabled=true;
					
					
				}
				
			}
			//-------------------------------------------------------------------------------------
			//-------------------------------------------------------------------------------------
			protected function prev_btn_clickHandler(event:MouseEvent):void
			{
				
				if(indexPage==0)
					first_clickHandler(event);
				else{
					indexPage--;
					if(last_btn.enabled==false){
						last_btn.enabled=true;
						next_btn.enabled=true;
					}
					if(indexPage==0){
						first_btn.enabled=false;
						prev_btn.enabled=false;
						last_btn.enabled=true;
						next_btn.enabled=true;
						
					}
					
					wsnotas.verNotasPedidoPaginadas(indexPage,SIZEPAGE);
					
					
				}
				
			}
			//-------------------------------------------------------------------------------------------
			//-------------------------------------------------------------------------------------------
			protected function next_btn_clickHandler(event:MouseEvent):void
			{
				
				if(indexPage==TOTALPAGES)
					last_clickHandler(event);
				else{
					indexPage++;
					if(first_btn.enabled==false){
						first_btn.enabled=true;
						prev_btn.enabled=true;
					}
					if(indexPage==TOTALPAGES){
						last_btn.enabled=false;
						next_btn.enabled=false;
						first_btn.enabled=true;
						prev_btn.enabled=true;
					}
					
					wsnotas.verNotasPedidoPaginadas(indexPage,SIZEPAGE);
					
				}
				
			}
			//-------------------------------------------------------------------------------------------------------
			//-------------------------------------------------------------------------------------------------------
			protected function last_clickHandler(event:MouseEvent):void
			{
				if(indexPage==TOTALPAGES){
					last_btn.enabled=false;
					next_btn.enabled=false;
					first_btn.enabled=true;
					prev_btn.enabled=true;
				}else{
					indexPage=TOTALPAGES;
					wsnotas.verNotasPedidoPaginadas(indexPage,SIZEPAGE);
					last_btn.enabled=false;
					next_btn.enabled=false;
					first_btn.enabled=true;
					prev_btn.enabled=true;
					
					
				}
				
			}
			//-------------------------------------------------------------------------------------------------------------
			
			protected function operation3_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function operation3_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				wsnotas.getRecorCountNotas();
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			private function formatDateTime(date:Date):String {
				return dtf.format(date);
			} 
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			
			protected function adgNotas_doubleClickHandler(event:MouseEvent):void
			{
				
				lblnombreyapecli.text=String(notas[adgNotas.selectedIndex].cliente.apellidoynombre);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:DateTimeFormatter id="dtf" dateTimePattern="dd/MM/yyyy"/>
		<s:WebService id="wsnotas" wsdl="http://localhost:8080/ServiceNotaPedido/NotaPedidoWs?WSDL" showBusyCursor="true">
			<s:operation name="getRecorCountNotas"
						 result="operation1_resultHandler(event)"
						 fault="operation1_faultHandler(event)">
				
			</s:operation>
			<s:operation name="selectAllNotas"
						 result="operation2_resultHandler(event)"
						 fault="operation2_faultHandler(event)">
				
			</s:operation>
			<s:operation name="verNotasPedidoPaginadas"
						 result="operation3_resultHandler(event)"
						 fault="operation3_faultHandler(event)">
				
			</s:operation>
		</s:WebService>
		<s:XMLListCollection id="notas" source="{xmlNotas.item}"/>
		<s:XMLListCollection id="detallenotas"/>
		
	</fx:Declarations>
	
	<s:Button id="first_btn" x="29" y="130" width="85" label="First"
			  click="first_clickHandler(event)" enabled="false" fontSize="16"/>
	<s:Button id="prev_btn" x="335" y="130" width="88" label="Prev"
			  click="prev_btn_clickHandler(event)" enabled="false" fontSize="16"/>
	<s:Button id="next_btn" x="646" y="131" width="84" label="Next"
			  click="next_btn_clickHandler(event)" enabled="false" fontSize="16"/>
	<s:Button id="last_btn" x="913" y="129" width="89" label="Last" click="last_clickHandler(event)"
			  enabled="false" fontSize="16"/>
	<s:DataGrid id="adgNotas" x="29" y="10" width="944" height="111"  variableRowHeight="true" doubleClick="adgNotas_doubleClickHandler(event)"
				selectionMode="singleRow" doubleClickEnabled="true">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="Fecha Compra" dataField="fechacompra"
							  rendererIsEditable="true"  >
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								<mx:DateField editable="true" text="@{data.fechacompra}" formatString="DD/MM/YYY" 
											  horizontalCenter="0" verticalCenter="0"
											  width="80%"/>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
					
				</s:GridColumn>
				<s:GridColumn headerText="pago" dataField="total"/>
			</s:ArrayList>
		</s:columns>		
	</s:DataGrid>
	<s:Label x="30" y="176" text="CLIENTE:"/>
	<s:Label id="lblnombreyapecli" x="86" y="173" width="288" fontSize="16"/>
</s:Group>



