<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:components="com.hillelcoren.components.*"
		 xmlns:controls="com.adobe.flex.extras.controls.*"
		 width="844" height="534" initialize="group1_initializeHandler(event)">
	<fx:Script>
		<![CDATA[
			import flexunit.utils.ArrayList;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.AdvancedDataGridEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.flexunit.internals.matchers.Each;
			
			import spark.components.DataGrid;
			import spark.events.ListEvent;
			[Bindable]
				private var xmlproduct:XMLList;
			
			[Bindable]
				public var dp:Array=[];
			[Bindable]
				private var totGral:Number;
			[Bindable]
				private var totGralDesc:Number;
			[Bindable]
				private var precio_desc:Number;
			
			//---------------------------------------------------------------------------
			protected function operation1_faultHandler(event:FaultEvent):void
			{
				Alert.show("ERROR "+event.fault.toString());
				
			}
			//---------------------------------------------------------------------------
			
			protected function operation1_resultHandler(event:ResultEvent):void
			{
				xmlproduct=new XMLList(event.result);
					
				cmbproduct.dataProvider=productlist;
						
			}
			//--------------------------------------------------------------------------
			
			protected function group1_initializeHandler(event:FlexEvent):void
			{
				//-------------------------------------------------------------------------------------------
				productosWs.searchAllProductos();
				cmbproduct.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtpreciop.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				txtdescuento.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				mskcantidad.addEventListener(KeyboardEvent.KEY_UP,transferirFocus);
				adglistpedprod.addEventListener(AdvancedDataGridEvent.ITEM_EDIT_END,itemEditEndHandler);
				cmbproduct.selectedItemId=1;
				totGral=0;
				totGralDesc=0;
				precio_desc=0;
				//-------------------------------------------------------------------------------------------
			}
			//------------------------------------------------------------------------------------------------
			protected function itemEditEndHandler(event:AdvancedDataGridEvent):void
			{
				// get a reference to the datagrid
				var grid:AdvancedDataGrid = event.target as AdvancedDataGrid;
				// get a reference to the name of the property in the
				// underlying object corresponding to the cell that's being edited
				var field:String = event.dataField;
				// get a reference to the row number (the index in the 
				// dataprovider of the row that's being edited)
				var row:Number = Number(event.rowIndex);
				// get a reference to the column number of
				// the cell that's being edited
				var col:int = event.columnIndex;
				var precio_descueto:Number=0;
				var precio:Number=0;
				var porcentajedescuento:Number=0;
				
				
				
				if (grid != null)
				{
					
					// gets the value (pre-edit) from the grid's dataprovider
					var oldValue:Number = Number(grid.dataProvider.getItemAt(row)[field]);
					// you could also use the following line to get the value
					// directly from the cellrenderer that's showing the value
					// in the datagrid -- it's the same value.
					// That way you wouldn't need a reference to the DataGrid.
					//var oldValue = event.itemRenderer.data[field];
					// get the value (post-edit) from the item editor
					var newValue:Number = Number(grid.itemEditorInstance[grid.columns[col].editorDataField]);
					
					// check if the value has changed
					if (newValue != oldValue)
					{
						// do actions that should happen when the data changes
						// Note that in this case, the dataprovider
						// hasn't been updated yet, so you can't do any
						// actions that require the dataprovider to have 
						// the new data
						//Alert.show(newValue+" "+oldValue+" "+col+" "+grid.selectedItem.subtotal);
						if(col==2){
							var priceValue:Number=(grid.selectedItem.price);
							//Alert.show(newValue+" "+priceValue);
							grid.selectedItem.subtotal=newValue*priceValue;
						
							
						
						}else{
							if(col!=4){
								var cannt:Number=(grid.selectedItem.countt);
								//Alert.show(newValue+" "+cannt);
								grid.selectedItem.subtotal=newValue*cannt;
							}
							
						
						}
						
						if(col==4){
							
							precio=Number(Number(grid.selectedItem.price).toFixed(2));
							porcentajedescuento=newValue;
							
							precio_descueto=precio*(porcentajedescuento/100);
							
							//Alert.show(String(porcentajedescuento)+" "+String(grid.selectedItem.price));
							
							totGralDesc=Number(totGralDesc+precio_descueto);
							
							grid.selectedItem.prec_descuento=Number(precio-precio_descueto).toFixed(2);
							
							grid.selectedItem.subtotal=Number(Number(grid.selectedItem.subtotal).toFixed(2))-precio_descueto;
							
							totGral=totGral-precio_descueto;
							
							lblTotDesc.text=String(totGralDesc.toFixed(2));
							lblTotGral.text=String(totGral.toFixed(2));
								
						
						}
						
						arrayDg.refresh();
							
					}
				}
				
			}

			//------------------------------------------------------------------------------------------------
			private function addadglistpedprod(idprod:String,codigoId:String,txtprecio:String,cantidad:String,descripcion:String,desc_porc:String):void{
				var subtot:Number;
				var b:Boolean=false;
				var p_desc:Number=0.0;
				
				
				subtot=Number(Number(Number(Number(txtprecio).toFixed(2))*Number(cantidad)).toFixed(2));
				totGral=Number(Number(totGral.toFixed(2))+Number(subtot.toFixed(2)));
				
				
				
				if(dp.length==0){
					dp=[{idproduct:idprod,id:codigoId,name:descripcion,countt:cantidad,price:txtprecio,porc_desc:desc_porc,prec_descuento:p_desc,subtotal:subtot}];
					totGralDesc=totGralDesc+Number(Number(desc_porc).toFixed(2));
				}else{
					
						for(var i:int=0;i<dp.length;i++){	
					
							//------------------------------------------------------------------					
							if(dp[i].name==descripcion){
								
								dp[i].countt=int(dp[i].countt)+int(cantidad);					
								dp[i].subtotal=dp[i].subtotal+subtot-p_desc;
								//dp[i].porc_desc=desc_porc;
								//dp[i].prec_descuento=p_desc;
								
								b=true;
							
							}
							//------------------------------------------------------------------
						}
					if(!b)					
						dp.push({idproduct:idprod,id:codigoId,name:descripcion,countt:cantidad,price:txtprecio,porc_desc:desc_porc,prec_descuento:p_desc,subtotal:subtot});
						
					}
			
			//-------------------------------------------------------------------------		
				arrayDg.source=dp;
				arrayDg.refresh();
			//-------------------------------------------------------------------------
				btnremover.enabled=true;
				
				adglistpedprod.dataProvider=arrayDg;
				lblTotGral.text=String(totGral.toFixed(2));
			
			}
			//--------------------------------------------------------------------------------------
			private function transferirFocus(KeyPress:KeyboardEvent):void{
				
				if(KeyPress.keyCode==Keyboard.ENTER){
					if(cmbproduct.text!=""&&KeyPress.currentTarget.toString().indexOf("cmbproduct")!=-1){
							focusManager.setFocus(txtpreciop);
							txtpreciop.text=cmbproduct.selectedItem.precio;
					
					}
					if(KeyPress.currentTarget.toString().indexOf("mskcantidad")!=-1&&Number(mskcantidad.text)>0){
						
						addadglistpedprod(cmbproduct.selectedItem.idproduct,cmbproduct.selectedItem.id,txtpreciop.text,mskcantidad.text,cmbproduct.selectedItem.descripcion,txtdescuento.text);	
					
					}
					if(KeyPress.currentTarget.toString().indexOf("txtpreciop")!=-1)
						focusManager.setFocus(mskcantidad);
					
					if(KeyPress.currentTarget.toString().indexOf("txtdescuento")!=-1&& Number(txtdescuento.text)>0){
					//	addadglistpedprod(cmbproduct.selectedItem.id,txtpreciop.text,mskcantidad.text,cmbproduct.selectedItem.descripcion,txtdescuento);
						Alert.show("Desea Agregar el Descuento al Listado?","Confirmar Operaci√≥n", Alert.YES | Alert.NO, this, calcularDescuentoTotal, null, Alert.NO);
						
					
					}
							
				
				}
			
			
			}
			//---------------------------------------------------------------------------------
			private function calcularDescuentoTotal(evt:CloseEvent):void{
				var tot_desc:Number;
				var porc_d:Number;
				if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)||Number(lblTotGral.text)<Number(txtdescuento.text)) return;
				
				porc_d=Number(Number(txtdescuento.text).toFixed(2));
				
				totGralDesc=totGralDesc+porc_d;
				 tot_desc= Number(Number(lblTotGral.text).toFixed(2))*porc_d/100;
				lblTotDesc.text=String(Number(Number(lblTotGral.text)-tot_desc).toFixed(2));
				
			
			}
			//---------------------------------------------------------------------------------
			/*private function calcularDescuento(precio:String,desc_p:String):Number{
					//calculo descuento de toda la ficha de productos pedidos
				var calc_precioDescuento:Number;
				
				porc_descuento=Number(Number(desc_p).toFixed(2));
				calc_precioDescuento=Number(Number(Number(precio).toFixed(2))*Number(Number(porc_descuento).toFixed(2))/100);
					
				return Number(Number(Number(precio).toFixed(2))-calc_precioDescuento);	
			
			}*/
			
			
			//-------------------------------------------------------------------------------------
			
			
			protected function adglistpedprod_dataChangeHandler(event:FlexEvent):void
			{
				
				Alert.show("DATOS CAMBIADOS!!!");
				
			}
			//-------------------------------------------------------------------------------------
			
			protected function adglistpedprod_itemDoubleClickHandler(event:mx.events.ListEvent):void
			{
				// TODO Auto-generated method stub
				Alert.show("Est√° seguro de eliminar el Registro actual?","Confirmar Eliminaci√≥n", Alert.YES | Alert.NO, this, delRowHandler, null, Alert.NO);
					
				
			}
			//--------------------------------------------------------------------------------------
			protected function delRowHandler(evt:CloseEvent):void{
				var desc_parcial:Number=0;
				//----------------------------------------------------------------------------------
				if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
				
					totGral=Number(totGral.toFixed(2))-Number(Number(adglistpedprod.selectedItem.subtotal).toFixed(2));
					
					if(Number(adglistpedprod.selectedItem.porc_desc)>0.0){
						
						desc_parcial=Number(adglistpedprod.selectedItem.price)*(Number(adglistpedprod.selectedItem.porc_desc)/100);	
						totGralDesc=totGralDesc-desc_parcial;
						//totGralDesc=Number(totGralDesc.toFixed(2))-Number(Number(desc_parcial).toFixed(2));
					
					}			
					
					
				//---------------------------------------------------------------------------------	
			
						
					
						lblTotDesc.text=totGralDesc.toFixed(2);
						lblTotGral.text=totGral.toFixed(2);
						
				//---------------------------------------------------------------------------------
						
				adglistpedprod.dataProvider.removeItemAt(adglistpedprod.selectedIndex);
				
				arrayDg.refresh();
				
				//-------------------------------------------------------------------------------
				if(arrayDg.length==0){
						totGral=0;
						totGralDesc=0;
						precio_desc=0;
						txtdescuento.text="0.0";
						mskcantidad.setFocus();
						txtpreciop.text="";
						mskcantidad.text="";					
						btnremover.enabled=false;
						lblTotDesc.text="0.0";
						lblTotGral.text="0.0";
						
				
				}
				//------------------------------------------------------------------------------
			
			}
			//--------------------------------------------------------------------------------------
			
			protected function btnremover_clickHandler(event:MouseEvent):void
			{
				if(arrayDg.length>0)
					Alert.show("Esta seguro de remover los productos Listados?","Confirmar Eliminaci√≥n", Alert.YES | Alert.NO, this, removerListadoPedidos, null, Alert.NO);
				
			}
			//--------------------------------------------------------------------------------------
			protected function removerListadoPedidos(cls:CloseEvent):void{
					
				adglistpedprod.dataProvider.removeItems();
				arrayDg.removeAll();
				arrayDg.refresh();
				//----------------------------------------------------------
				totGral=0;
				totGralDesc=0;
				precio_desc=0;
				txtdescuento.text="0.0";
				cmbproduct.text="";
				cmbproduct.setFocus();
				txtpreciop.text="";
				mskcantidad.text="";					
				btnremover.enabled=false;
				lblTotDesc.text="0.0";
				lblTotGral.text="0.0";
				//--------------------------------------------------------
				
			
			
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:WebService id="productosWs" wsdl="http://localhost:8080/ServiceProductos/ProductosWs?wsdl"
					  showBusyCursor="true">
			<s:operation name="searchAllProductos"
						 fault="operation1_faultHandler(event)"
						 result="operation1_resultHandler(event)">
				
			</s:operation>
		</s:WebService>
		<s:XMLListCollection id="productlist" source="{xmlproduct.producto}"/>
		<mx:CurrencyFormatter id="cf" currencySymbol="$" alignSymbol="left" precision="2" useThousandsSeparator="true"
							  useNegativeSign="true"/>
		<mx:NumberFormatter id="nf" precision="2" rounding="none" useThousandsSeparator="false" decimalSeparatorFrom="true"/>
		<s:ArrayCollection id="arrayDg"/>
	</fx:Declarations>
	<s:Label x="27" y="25" fontFamily="Verdana" fontSize="16" text="Producto:"/>
	<s:Label x="32" y="58" fontFamily="Verdana" fontSize="16" text="Precio $:"/>
	<s:TextInput id="txtpreciop" x="107" y="46" width="187" fontSize="16" fontWeight="bold"
				 maxChars="6" restrict="0-9."/>
	<s:Label x="23" y="99" fontFamily="Verdana" fontSize="16" text="Cantidad:"/>
	<controls:MaskedTextInput id="mskcantidad" x="108" y="89" width="55" fontFamily="Verdana"
							  fontSize="16" fontWeight="bold" maxChars="3" restrict="0-9"/>
	<mx:AdvancedDataGrid id="adglistpedprod" x="23" y="127" width="747" height="199"
						 alternatingItemColors="[#f7eb9e, white]"
						 dataChange="adglistpedprod_dataChangeHandler(event)"
						 designViewDataType="flat" doubleClickEnabled="true"
						 editable="item group summary" fontFamily="Verdana" fontSize="15"
						 itemDoubleClick="adglistpedprod_itemDoubleClickHandler(event)" rowCount="8"
						 variableRowHeight="true">
		<mx:columns>
			<mx:AdvancedDataGridColumn id="idproducto" visible="false" dataField="idproduct"/>
				
			
			<mx:AdvancedDataGridColumn  width="52" dataField="id" editable="false"
									   fontFamily="Verdana" fontSize="10" headerText="Codigo"
									   resizable="false" textAlign="left" textDecoration="none"/>
			<mx:AdvancedDataGridColumn width="84" dataField="name" editable="false"
									   fontFamily="Verdana" fontSize="10" headerText="Descripcion"
									   resizable="false" textAlign="left"/>
			<mx:AdvancedDataGridColumn width="35" dataField="countt" editable="true"
									   fontFamily="Verdana" fontSize="10" headerText="Cantidad"
									   resizable="false" sortable="false" textAlign="center"/>
			<mx:AdvancedDataGridColumn width="45" dataField="price" draggable="false" editable="true"
									   fontFamily="Verdana" fontSize="10" formatter="{cf}"
									   headerText="PrecioU" resizable="false" sortable="false"
									   textAlign="center"/>
			<mx:AdvancedDataGridColumn editable="true" dataField="porc_desc" fontFamily="Verdana" fontSize="10"
									   headerText="% Descuento" resizable="false" sortable="false"
									   textAlign="center" width="33"/>
			<mx:AdvancedDataGridColumn width="33" dataField="prec_descuento" editable="false"
									   fontFamily="Verdana" fontSize="10" formatter="{cf}"
									   headerText="Precio Desc"/>
			<mx:AdvancedDataGridColumn width="52" color="red" dataField="subtotal" draggable="false"
									   editable="false" fontFamily="Verdana" fontSize="10"
									   fontWeight="bold" formatter="{cf}" headerText="SubTotal"
									   resizable="false" sortable="false" textAlign="right"/>
		</mx:columns>
	</mx:AdvancedDataGrid>
	<components:AutoComplete id="cmbproduct" x="107" y="11" width="203" allowDuplicates="false"
							 dropDownRowCount="10" fontSize="16" fontWeight="bold"
							 labelField="descripcion" matchType="beginning">
	</components:AutoComplete>
	<s:Label x="495" y="380" color="#1D7F03" fontFamily="Verdana" fontSize="16" fontWeight="bold"
			 text="TOTAL GRAL $:" verticalAlign="top"/>
	<s:Label id="lblTotGral" x="631" y="377" width="124" color="#127B1A" fontFamily="Verdana"
			 fontSize="16" fontWeight="bold" text="0.0" textAlign="right" verticalAlign="bottom"/>
	<s:Label x="264" y="101" fontFamily="Verdana" fontSize="16" fontWeight="normal" text="% Descuento:"/>
	<controls:MaskedTextInput text="0.0" maxChars="3" x="381" y="92" width="43" fontFamily="Verdana" fontSize="16" id="txtdescuento" restrict="0-9." toolTip="Ingrese un porcentaje de descuento"/>
	<s:Label x="440" y="350" color="#E2AA14" fontFamily="Verdana" fontSize="16"
			 text="TOTAL DESCUENTOS $:"/>
	<s:Label id="lblTotDesc" x="628" y="348" width="127" color="#F9BD05" fontFamily="Verdana"
			 fontSize="16" fontWeight="bold" text="0.0" textAlign="right" verticalAlign="bottom"/>
	<s:Button id="btnremover" x="25" y="343" label="Remover" click="btnremover_clickHandler(event)"
			  enabled="false" toolTip="Elimina todos Los productos del Listado!!!"/>
</s:Group>
